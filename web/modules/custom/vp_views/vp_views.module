<?php

use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;

/**
 * Implements hook_preprocess_HOOK().
 */
function vp_views_preprocess_views_view_table(&$variables) {
  if (isset($_GET['year'])) {
    $year = $_GET['year'];
    $last_year = $year - 1;
    $variables['header']['field_vp_rate_hourly']['content'] = $year . ' Rate';
    $variables['header']['field_vp_rate_previous']['content'] = $last_year . ' Rate';
  }
}

/**
 * Implements hook_views_query_alter().
 */
function vp_views_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {

  // Alter the query based on the view id.
  switch ($view->id()) {

    case 'search_by_firm':
    case 'search_rates_by_firm_summary_rates':
    case 'search_rates_by_firm_detail':
    case 'search_fees_by_firm':
    case 'search_fees_by_company':

      // Get the value of the exposed filter Practice Area 1,
      // set to NULL if it doesn't exist.
      $pa1 = $view->exposed_data['field_vp_practice_area_1_target_id'] ? $view->exposed_data['field_vp_practice_area_1_target_id'] : NULL;

      // If there is no exposed data for practice area 1.
      if (!isset($pa1)) {
        // Get rid of the practice area "OR" block entirely.
        unset($query->where[2]);

        // We add practice areas with default values in the view so the
        // proper relationships are created.
        // Get the tableQueue so we can manipulate it,
        // and clear the default practice area values.
        $tables =& $query->getTableQueue();
        unset($tables['node_field_data_node__field_vp_rate_individual__node__field_vp_practice_area_2']);
        unset($tables['node_field_data_node__field_vp_rate_individual__node__field_vp_practice_area_3']);
      }
      else {
        // Traverse through the 'where' part of the query,
        // eliminate the value of practice area 2 and 3,
        // add value of practice area 1 to practice areas 2 and 3.
        foreach ($query->where as &$condition_group) {
          foreach ($condition_group['conditions'] as &$condition) {

            if ($condition['field'] == 'node_field_data_node__field_vp_rate_individual__node__field_vp_practice_area_2.field_vp_practice_area_2_target_id = :node__field_vp_practice_area_2_field_vp_practice_area_2_target_id') {
              $condition['value'][':node__field_vp_practice_area_2_field_vp_practice_area_2_target_id'] = NULL;
            }
            if ($condition['field'] == 'node_field_data_node__field_vp_rate_individual__node__field_vp_practice_area_3.field_vp_practice_area_3_target_id = :node__field_vp_practice_area_3_field_vp_practice_area_3_target_id') {
              $condition['value'][':node__field_vp_practice_area_3_field_vp_practice_area_3_target_id'] = NULL;
            }
            if ($condition['field'] == 'node_field_data_node__field_vp_rate_individual__node__field_vp_practice_area_1.field_vp_practice_area_1_target_id = :node__field_vp_practice_area_1_field_vp_practice_area_1_target_id') {
              $field = 'node_field_data_node__field_vp_rate_individual__node__field_vp_practice_area_2.field_vp_practice_area_2_target_id';
              $field2 = 'node_field_data_node__field_vp_rate_individual__node__field_vp_practice_area_3.field_vp_practice_area_3_target_id';
              $value = $pa1;
              $operator = '=';
              $query->addWhere(2, $field, $value, $operator);
              $query->addWhere(2, $field2, $value, $operator);
            }
          }
        }
      }

      break;
  }

}
