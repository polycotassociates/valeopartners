<?php


/**
 * @file
 * Common Valeo Partners methods used by modules in the site.
 */

use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\paragraphs\Entity\Paragraph;

// /**
//  * Implements hook_node_insert().
//  */
// function vp_api_node_insert(NodeInterface $node) {

//   if ($node->getType() == 'vp_type_rate') {
//     kint("rate");
//     kint($node);


//     die;
//   }

//   if ($node->getType() == 'vp_type_individual') {

//     /*
//      * This is a new individual. Create the last 5 years of rates
//      * as place holders.
//      */

//     // Get current year.
//     $year = format_date(time(), 'custom', 'Y');

//     // Create paragraph entries for the last 5 years of rates.
//     for ($x = $year; $x >= $year - 5; $x--) {

//       $paragraph_data = [
//         'type' => 'actual_rate_by_year',
//         'field_paragraph_actual_rate_year' => (string) $x,
//         'field_paragraph_actual_rate' => 0,
//       ];

//       $new_paragraph = Paragraph::create($paragraph_data);
//       $new_paragraph->save();
//       $paragraphs[] = ['target_id' => $new_paragraph->Id(), 'target_revision_id' => $new_paragraph->getRevisionId()];
//     }

//     // Add the paragraphs.
//     $node->field_actual_rate_by_year = $paragraphs;
//     $node->save();
//   }

// }

/**
 * Function to Generate minimum year dropdowns.
 */
function vp_api_year_options_min() {

  $options = [];
  // Get the current year.
  $year = format_date(time(), 'custom', 'Y');

  // Loop through years from 1950 to this year + 10.
  for ($x = 2000; $x <= $year + 10; $x++) {
    // Make a date string based on year plus December 31.
    $long_date = $x . '-01-01';
    // Make an options array in the form of value="2010-01-01" key="2010".
    $options[$long_date] = $x;
  }

  return $options;
}

/**
 * Function to Generate maximum year dropdowns.
 */
function vp_api_year_options_max() {

  $options = [];
  // Get the current year.
  $year = format_date(time(), 'custom', 'Y');

  // Loop through years from 1950 to this year + 10.
  for ($x = 2000; $x <= $year + 10; $x++) {
    // Make a date string based on year plus December 31.
    $long_date = $x . '-12-31';
    // Make an options array in the form of value="2010-12-31" key="2010".
    $options[$long_date] = $x;
  }

  return $options;
}

/**
 * Function to Generate maximum year dropdowns.
 */
function vp_api_bar_grad_year_options() {

  $options = [];
  // Get the current year.
  $year = format_date(time(), 'custom', 'Y');

  // Loop through years from 1950 to this year + 10.
  for ($x = 1950; $x <= $year; $x++) {
    $options[$x] = $x;
  }

  return $options;
}

/**
 * Return a list of vocabulary terms to create a dropdown.
 */
function vp_api_get_vocabulary_terms($vocabulary) {

  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vocabulary);
  $x = 0;

  foreach ($terms as $term) {
    $options[$term->tid] = $term->name;
    $x++;
  }

  return $options;
}
