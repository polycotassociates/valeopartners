<?php

/**
 * @file
 *
 * Contains implementation of Views Index Hint.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;
use Drupal\views_index_hint\ViewsIndexHint;

/**
 * Implement hook_views_pre_execute().
 */
function views_index_hint_views_pre_execute(ViewExecutable $view) {
  if ($view->storage->getThirdPartySetting('views_index_hint', 'index_hint_enabled')) {
    // Add the new extender to add index hint.
    /** @var ViewsIndexHint $extender */
    $extender = $view->query->query()->extend('Drupal\views_index_hint\ViewsIndexHint');
    $extender->setBaseTable($view->storage->get('base_table'));

    if ($index = $view->storage->getThirdPartySetting('views_index_hint', 'index_hint_use')) {
      $extender->setIndexHint($index, ViewsIndexHint::INDEX_HINT_TYPE_USE);
    }
    if ($index = $view->storage->getThirdPartySetting('views_index_hint', 'index_hint_force')) {
      $extender->setIndexHint($index, ViewsIndexHint::INDEX_HINT_TYPE_FORCE);
    }
    if ($index = $view->storage->getThirdPartySetting('views_index_hint', 'index_hint_ignore')) {
      $extender->setIndexHint($index, ViewsIndexHint::INDEX_HINT_TYPE_IGNORE);
    }
    $view->build_info['query'] = $extender;
  }

}

/**
 * Implement hook_form_alter().
 * Add Lite pager option to Views UI
 */
function views_index_hint_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_ui_edit_display_form' && $form_state->getStorage()['section'] == 'query') {
    /** @var \Drupal\views_ui\ViewUI $view */
    $view = $form_state->getStorage()['view'];
    // $display->handler->add_override_button($form, $form_state, $form_state['section']);
    $form['override']['#weight'] = -99;

    $form['options']['query']['options']['index_hint_enabled'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use Query Index Hint'),
      '#description' => t('Add an index hint according to <a href="@link">MySQL specifications</a>', array('@link' => 'http://dev.mysql.com/doc/refman/5.1/en/index-hints.html')),
      '#default_value' => $view->getThirdPartySetting('views_index_hint', 'index_hint_enabled'),
      '#weight' => 10,
    );
    $form['options']['query']['options']['index_hint_use'] = array(
      '#type' => 'textfield',
      '#title' => t('Use Index'),
      '#description' => t('Comma separated index names to use.'),
      '#default_value' => $view->getThirdPartySetting('views_index_hint', 'index_hint_use'),
      '#weight' => 11,
      '#dependency' => array('edit-query-options-index-hint-enabled' => '1'),
    );
    $form['options']['query']['options']['index_hint_force'] = array(
      '#type' => 'textfield',
      '#title' => t('Force Index'),
      '#description' => t('Comma separated index names to force.'),
      '#default_value' => $view->getThirdPartySetting('views_index_hint', 'index_hint_force'),
      '#weight' => 12,
      '#dependency' => array('edit-query-options-index-hint-enabled' => '1'),
    );
    $form['options']['query']['options']['index_hint_ignore'] = array(
      '#type' => 'textfield',
      '#title' => t('Ignore Index'),
      '#description' => t('Comma separated index names to ignore.'),
      '#default_value' => $view->getThirdPartySetting('views_index_hint', 'index_hint_ignore'),
      '#weight' => 13,
      '#dependency' => array('edit-query-options-index-hint-enabled' => '1'),
    );
    array_unshift($form['actions']['submit']['#submit'], 'views_index_hint_display_form_submit');
  }
}

/**
 * Callback to save the Index Hint form field
 */
function views_index_hint_display_form_submit($form, FormStateInterface $form_state) {
  /** @var \Drupal\views_ui\ViewUI $view */
  $view = $form_state->getStorage()['view'];
  $values = $form_state->getValues();
  $view->setThirdPartySetting('views_index_hint', 'index_hint_enabled', $values['query']['options']['index_hint_enabled']);
  $view->setThirdPartySetting('views_index_hint', 'index_hint_use', $values['query']['options']['index_hint_use']);
  $view->setThirdPartySetting('views_index_hint', 'index_hint_force', $values['query']['options']['index_hint_force']);
  $view->setThirdPartySetting('views_index_hint', 'index_hint_ignore', $values['query']['options']['index_hint_ignore']);
}
