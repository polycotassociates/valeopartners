<?php

// $Id$

/**
 * @file
 *   Valeo Saved Saerch functions
 */


/**
 * Implementation of hook_perm().
 */
function valeosavedsearch_perm() {
	$perm = array(
		'download saved searches',
	);
	return $perm;
}


/**
 * Implementation of hook_menu().
 */
function valeosavedsearch_menu() {
	$items['node/%node/saved_csv'] = array(
		'title' => 'CSV export',
		'page callback' => 'valeosavedsearch_render',
		'page arguments' => array('csv', 1),
		'access arguments' => array('download saved searches'),
		'type' => MENU_CALLBACK,
	);
	
	$items['node/%node/saved_xls'] = array(
		'title' => 'XLS export',
		'page callback' => 'valeosavedsearch_render',
		'page arguments' => array('xls', 1),
		'access arguments' => array('download saved searches'),
		'type' => MENU_CALLBACK,
	);
	
	return $items;
}


/**
 *   Use this function just to get drupal to scan for the following node type specific function
 */
function valeosavedsearch_preprocess_node(&$vars, $hook) {
	// Variables available to every node are defined here
	
	// Now define node type-specific variables by calling their own preprocess functions (if they exist)
	$function = 'valeosavedsearch_preprocess_node_'. $vars['node']->type;
	if (function_exists($function)) {
		$function($vars);
	}
}


/**
 *   Restrict the display of the search node to only the creator
 */
function valeosavedsearch_node_access_records($node) {
	if ($node->type == 'search') {
		$grants = array();
	
		$grants[] = array(
			'realm' => 'valeosavedsearch',
			'gid' => $node->uid,
			'grant_view' => TRUE,
			'grant_update' => FALSE,
			'grant_delete' => FALSE,
			'priority' => 1,
      	);
		return $grants;
	}
}

function valeosavedsearch_node_grants($account, $op) {
	$grants['valeosavedsearch'] = array($account->uid);
	return $grants;
}


/**
 *   Alter the display of the Saved Search add node form
 */
function valeosavedsearch_form_alter(&$form, $form_state, $form_id) {
	switch ($form_id) {
		// User Profile form
		case 'search_node_form':
			unset($form['body_field']['teaser_include']);
			unset($form['buttons']['preview']);
			$form['body_field']['body']['#rows'] = 3;
			break;
	}
}




/**
 *   Override the variables for the Saved Seach content type
 */
function valeosavedsearch_preprocess_node_search(&$variables) {
	$view = _valeosearch_buildview($variables);
	
	/* Overwrite the content of the node with the search results */
	switch (arg(2)) {
		case 'search_xls':
			$variables['content'] = $view->execute_display('feed_1', array());
			break;
		case 'search_csv':
			$variables['content'] = $view->execute_display('feed_2', array());
			break;
		default:
			$variables['content'] = $view->execute_display('default', array());
			break;
	}
}


/**
 *   Build the view itself
 */
function _valeosearch_buildview($variables) {
	$detail = 0;
	$download_limit = 20000;
	$cols = array();
	$firms = array();
	$positions = array();
	$practiceareas = array();
	$cities = array();
	$industries = array();
	$gradyear = array(
		'min' => '',
		'max' => date('Y') . '-01-01 00:00:00',
	);
	$baryear = array(
		'min' => '',
		'max' => date('Y') . '-01-01 00:00:00',
	);
	$partneryear = array(
		'min' => '',
		'max' => date('Y') . '-01-01 00:00:00',
	);
	$rateyear = array(
		'min' => '',
		'max' => date('Y') . '-01-01 00:00:00',
	);
	$nid = $variables['nid'];
	$timestamp = date('d-m-y');
	/* Determine if we need to show detail or summary data */
	if (isset($variables['field_search_detail'][0])) {
		$detail = $variables['field_search_detail'][0]['safe'];
	}
	/* Set a simple array of the column names */
	foreach($variables['field_search_columns'] AS $col){
		$cols[] = $col['view'];
	}
	/* Format the options for filters into arrays */
	foreach($variables['field_search_firms'] AS $opt){
		if ($opt['nid']) {
			$firms[$opt['nid']] = $opt['nid'];
		}
	}
	foreach($variables['field_search_position'] AS $opt){
		if ($opt['value']) {
			$positions[$opt['value']] = $opt['value'];
		}
	}
	foreach($variables['field_search_practicearea'] AS $opt){
		if ($opt['value']) {
			$practiceareas[$opt['value']] = $opt['value'];
		}
	}
	foreach($variables['field_search_industry'] AS $opt){
		if ($opt['value']) {
			$industries[$opt['value']] = $opt['value'];
		}
	}
	foreach($variables['field_search_city'] AS $opt){
		if ($opt['value']) {
			$cities[$opt['value']] = $opt['value'];
		}
	}
	if ($variables['field_search_gradyear'][0]['value']) {
		$gradyear = array(
			'min' => substr($variables['field_search_gradyear'][0]['value'],0,4) . '-01-01 00:00:00',
			'max' => substr($variables['field_search_gradyear'][0]['value2'],0,4) . '-01-01 00:00:00',
		);
	}
	if ($variables['field_search_baryear'][0]['value']) {
		$baryear = array(
			'min' => substr($variables['field_search_baryear'][0]['value'],0,4) . '-01-01 00:00:00',
			'max' => substr($variables['field_search_baryear'][0]['value2'],0,4) . '-01-01 00:00:00',
		);
	}
	if ($variables['field_search_partneryear'][0]['value']) {
		$partneryear = array(
			'min' => substr($variables['field_search_partneryear'][0]['value'],0,4) . '-01-01 00:00:00',
			'max' => substr($variables['field_search_partneryear'][0]['value2'],0,4) . '-01-01 00:00:00',
		);
	}
	if ($variables['field_search_rateyear'][0]['value']) {
		$rateyear = array(
			'min' => substr($variables['field_search_rateyear'][0]['value'],0,4) . '-01-01 00:00:00',
			'max' => substr($variables['field_search_rateyear'][0]['value2'],0,4) . '-01-01 00:00:00',
		);
	}
	$body_content = $variables['node']->content['body']['#value'];
	
	

	/* Build out the saved search using the options selected */
	$view = views_new_view();
	$view->description = 'Your saved search';
	$view->tag = 'savedsearch';
	$view->view_php = '';
	$view->base_table = 'node';
	$view->is_cacheable = FALSE;
	$view->api_version = 2;
	$view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */
	$handler = $view->new_display('default', 'Defaults', 'default');
	$fields = array();
	$filter = array();
	/* Reuse some column sub-arrays, they are almost always the same */
	$alter = array(
		'alter_text' => 0,
		'text' => '',
		'make_link' => 0,
		'path' => '',
		'link_class' => '',
		'alt' => '',
		'prefix' => '',
		'suffix' => '',
		'target' => '',
		'help' => '',
		'trim' => 0,
		'max_length' => '',
		'word_boundary' => 1,
		'ellipsis' => 1,
		'html' => 0,
		'strip_tags' => 0,
	);
	$multiple = array(
		'group' => TRUE,
		'multiple_number' => '',
		'multiple_from' => '',
		'multiple_reversed' => FALSE,
	);
	/* Extra Handlers */
	$handler->override_option('access', array(
		'type' => 'role',
		'role' => array(
			'3' => 3,
			'8' => 8,
			'7' => 7,
			'6' => 6,
			'4' => 4,
			'5' => 5,
		),
	));
	$handler->override_option('cache', array(
		'type' => 'none',
	));
	$handler->override_option('header', '<?php
		global $pager_page_array, $pager_total_items, $pager_total;
		$my_view = views_get_current_view();
		$items_per_page = $my_view->pager[\'items_per_page\'];
		echo \'' . $body_content . '\';
		if ($pager_total_items[0] > 0) {
			// out download
			global $user;
			if (in_array("Download Add-On", $user->roles)) {
				echo \'<div class="downloadlink narrow"><p><a href="http://'.$_SERVER['HTTP_HOST'].'/node/'.$nid.'/search_xls" title="Download Report in Excel">Download this Report in Excel <img src="http://'.$_SERVER['HTTP_HOST'].'/images/icon_excel.png" alt="Excel Icon" height="16" width="16" /></a></p></div>\';
			}
			else {
				echo \'<div class="inactive narrow"><p>Download this Report in Excel <img src="/sites/all/modules/drupal-contrib/views_bonus/export/images/xls.png" alt="XLS" title="XLS" width="16" height="16"><br />Download this Report in CSV <img src="/images/icon_csv.png" alt="CSV" title="CSV" width="16" height="16"></p></div>\';
			}
		}
		echo \'<h3 class="resultscount">\';
		if ($pager_total_items[0] > 0) {
			if ($pager_total[0] == 1) {
				if ($pager_total_items[0] == 1) {
					echo t(\'Showing <b>!pager_total_items</b> result\', array(\'!pager_total_items\' => number_format($pager_total_items[0],0)));
				} else {
					echo t(\'Showing <b>!pager_total_items</b> results\', array(\'!pager_total_items\' => number_format($pager_total_items[0],0)));
				}
			} else {
				$start = 1 + ($pager_page_array[0] * $items_per_page);
				$end = (1 + $pager_page_array[0]) * $items_per_page;
				if ($end > $pager_total_items[0]) $end = $pager_total_items[0];
				echo t(\'Showing !start - !end of <b>!pager_total_items</b> results\', array(\'!start\' => number_format($start,0), \'!end\' => number_format($end,0), \'!pager_total_items\' => number_format($pager_total_items[0],0)));
			}
		} else {
			echo \'Your Saved Search found no matches.\';
		}
		echo \'</h3>\';
	?>');
	$handler->override_option('header_format', 3);
	$handler->override_option('header_empty', 1);
	$handler->override_option('footer', '');
	$handler->override_option('footer_format', 1);
	$handler->override_option('footer_empty', 0);
	$handler->override_option('items_per_page', 50);
	$handler->override_option('use_pager', '1');
	$handler->override_option('style_plugin', 'table');
	/* Style and Column Handlers */
	$style = array(
		'grouping' => '',
		'override' => 1,
		'sticky' => 0,
		'order' => 'asc',
		'default' => 'title',
		'mission_description' => FALSE,
		'description' => '',
		'attach_text' => 'XLS',
		'provide_file' => 1,
		'filename' => 'valeo_savedsearch_download.xls',
		'parent_sort' => 0,
	);
/* BUILD SUMMARY VIEW */
	if ($detail) {
		$view->name = $nid.'_ms3y';
		$handler->override_option('relationships', array(
			'rate_nid' => array(
				'label' => 'Rate',
				'required' => 0,
				'id' => 'rate_nid',
				'table' => 'current_rate',
				'field' => 'rate_nid',
				'relationship' => 'none',
			),
			'field_rate_firm_nid' => array(
				'label' => 'Firm',
				'required' => 0,
				'delta' => -1,
				'id' => 'field_rate_firm_nid',
				'table' => 'node_data_field_rate_firm',
				'field' => 'field_rate_firm_nid',
				'relationship' => 'rate_nid',
			),
			'field_rate_client_nid' => array(
				'label' => 'Company',
				'required' => 0,
				'delta' => -1,
				'id' => 'field_rate_client_nid',
				'table' => 'node_data_field_rate_client',
				'field' => 'field_rate_client_nid',
				'relationship' => 'rate_nid',
			),
		));
		/* Build the fields override handler */
		/* Attorney Name Column */
		$fields['title'] = array(
			'label' => 'Attorney Name',
			'alter' => $alter,
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'link_to_node' => 1,
			'exclude' => 0,
			'id' => 'title',
			'table' => 'node',
			'field' => 'title',
			'relationship' => 'none',
		);
		/* Position Column */
		if (in_array('Position',$cols) || in_array('All Columns',$cols)) {
			$fields['field_rate_position1_value'] = array(
				'label' => 'Position',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_rate_position1_value',
				'table' => 'node_data_field_rate_position1',
				'field' => 'field_rate_position1_value',
				'relationship' => 'rate_nid',
			);
		}
		/* 3 Practice Area Columns in 1 */
		if (in_array('Practice Area',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_pa1_value'] = array(
				'label' => 'Practice Areas',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_pa1_value',
				'table' => 'node_data_field_individual_pa1',
				'field' => 'field_individual_pa1_value',
				'relationship' => 'none',
			);
			$fields['field_individual_pa2_value'] = array(
				'label' => '',
				'alter' => array(
					'alter_text' => 0,
					'text' => ', [field_individual_pa2_value]',
					'make_link' => 0,
					'path' => '',
					'link_class' => '',
					'alt' => '',
					'prefix' => '',
					'suffix' => '',
					'target' => '',
					'help' => '',
					'trim' => 0,
					'max_length' => '',
					'word_boundary' => 1,
					'ellipsis' => 1,
					'html' => 0,
					'strip_tags' => 0,
				),
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'none',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_pa2_value',
				'table' => 'node_data_field_individual_pa2',
				'field' => 'field_individual_pa2_value',
				'relationship' => 'none',
			);
			$fields['field_individual_pa3_value'] = array(
				'label' => '',
				'alter' => array(
					'alter_text' => 0,
					'text' => ', [field_individual_pa3_value]',
					'make_link' => 0,
					'path' => '',
					'link_class' => '',
					'alt' => '',
					'prefix' => '',
					'suffix' => '',
					'target' => '',
					'help' => '',
					'trim' => 0,
					'max_length' => '',
					'word_boundary' => 1,
					'ellipsis' => 1,
					'html' => 0,
					'strip_tags' => 0,
				),
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_pa3_value',
				'table' => 'node_data_field_individual_pa3',
				'field' => 'field_individual_pa3_value',
				'relationship' => 'none',
			);
		}
		/* Firm Title Column */
		if (in_array('Firm',$cols) || in_array('All Columns',$cols)) {
			$fields['title_1'] = array(
				'label' => 'Firm',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 1,
				'exclude' => 0,
				'id' => 'title_1',
				'table' => 'node',
				'field' => 'title',
				'relationship' => 'field_rate_firm_nid',
			);
		}
		/* Region City Column */
		if (in_array('Region / City',$cols) || in_array('All Columns',$cols)) {
			$fields['field_firm_headquarters_value'] = array(
				'label' => 'Region / City',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_firm_headquarters_value',
				'table' => 'node_data_field_firm_headquarters',
				'field' => 'field_firm_headquarters_value',
				'relationship' => 'field_rate_firm_nid',
			);
		}
		/* Company Column */
		if (in_array('Company',$cols) || in_array('All Columns',$cols)) {
			$fields['title_2'] = array(
				'label' => 'Company',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'exclude' => 0,
				'id' => 'title_2',
				'table' => 'node',
				'field' => 'title',
				'relationship' => 'field_rate_client_nid',
			);
		}
		/* Industry Column */
		if (in_array('Industry',$cols) || in_array('All Columns',$cols)) {
			$fields['field_client_industry_value'] = array(
				'label' => 'Industry',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_client_industry_value',
				'table' => 'node_data_field_client_industry',
				'field' => 'field_client_industry_value',
				'relationship' => 'field_rate_client_nid',
			);
		}
		/* Graduation Date Column */
		if (in_array('Graduation Year',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_graddate_value'] = array(
				'label' => 'Grad Year',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'year_only',
				'multiple' => array(
					'multiple_number' => '',
					'multiple_from' => '',
					'multiple_to' => '',
					'group' => '',
				),
				'repeat' => array(
					'show_repeat_rule' => '',
				),
				'fromto' => array(
					'fromto' => 'both',
				),
				'exclude' => 0,
				'id' => 'field_individual_graddate_value',
				'table' => 'node_data_field_individual_graddate',
				'field' => 'field_individual_graddate_value',
				'relationship' => 'none',
			);
		}
		/* Bar Date Column */
		if (in_array('Bar Year',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_bardate_value'] = array(
				'label' => 'Bar Year',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'year_only',
				'multiple' => array(
					'multiple_number' => '',
					'multiple_from' => '',
					'multiple_to' => '',
					'group' => '',
				),
				'repeat' => array(
					'show_repeat_rule' => '',
				),
				'fromto' => array(
					'fromto' => 'both',
				),
				'exclude' => 0,
				'id' => 'field_individual_bardate_value',
				'table' => 'node_data_field_individual_bardate',
				'field' => 'field_individual_bardate_value',
				'relationship' => 'none',
			);
		}
		/* State Bar Column */
		if (in_array('Bar State',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_statebar_value'] = array(
				'label' => 'Bar State',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_statebar_value',
				'table' => 'node_data_field_individual_statebar',
				'field' => 'field_individual_statebar_value',
				'relationship' => 'none',
			);
		}
		/* Partner Year Column */
		if (in_array('Partner Year',$cols)) {
			$fields['field_individual_partnerdate_value'] = array(
				'label' => 'Partner Year',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'year_only',
				'multiple' => array(
					'multiple_number' => '',
					'multiple_from' => '',
					'multiple_to' => '',
					'group' => 0,
				),
				'repeat' => array(
					'show_repeat_rule' => '',
				),
				'fromto' => array(
					'fromto' => 'both',
				),
				'exclude' => 0,
				'id' => 'field_individual_partnerdate_value',
				'table' => 'node_data_field_individual_partnerdate',
				'field' => 'field_individual_partnerdate_value',
				'relationship' => 'none',
			);
		}
		/* Add the fields variable to the override options handler */
		$handler->override_option('fields', $fields);
	
		/* Query Filters */
		/* Make sure Individual is published */
		$filter['status'] = array(
			'operator' => '=',
			'value' => '1',
			'group' => '0',
			'exposed' => FALSE,
			'expose' => array(
				'operator' => FALSE,
				'label' => '',
			),
			'id' => 'status',
			'table' => 'node',
			'field' => 'status',
			'relationship' => 'none',
		);
		/* Check the main records are for individuals */
		$filter['type'] = array(
			'operator' => 'in',
			'value' => array(
			'individual' => 'individual',
			),
			'group' => '0',
			'exposed' => FALSE,
			'expose' => array(
				'operator' => FALSE,
				'label' => '',
			),
			'id' => 'type',
			'table' => 'node',
			'field' => 'type',
			'relationship' => 'none',
		);
		/* Filter by Firms */
		if (count($firms)) {
			$filter['field_rate_firm_nid'] = array(
				'operator' => 'or',
				'value' => $firms,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_rate_firm_nid',
				'table' => 'node_data_field_rate_firm',
				'field' => 'field_rate_firm_nid',
				'relationship' => 'rate_nid',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Region/City */
		if (count($cities)) {
			$filter['term_node_tid_depth'] = array(
				'operator' => 'or',
				'value' => $cities,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'type' => 'select',
				'limit' => TRUE,
				'vid' => '6',
				'depth' => '5',
				'id' => 'term_node_tid_depth',
				'table' => 'node',
				'field' => 'term_node_tid_depth',
				'hierarchy' => 1,
				'configure_hs' => '<a href="/admin/build/views/hs_config/stats_ms3y/default/term_node_tid_depth">Configure Hierarchical Select</a>',
				'relationship' => 'field_rate_firm_nid',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Industries */
		if (count($industries)) {
			$filter['field_client_industry_value'] = array(
				'operator' => 'or',
				'value' => $industries,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_client_industry_value',
				'table' => 'node_data_field_client_industry',
				'field' => 'field_client_industry_value',
				'relationship' => 'field_rate_client_nid',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Position */
		if (count($positions)) {
			$filter['term_node_tid_depth_1'] = array(
				'operator' => 'or',
				'value' => $positions,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'type' => 'select',
				'limit' => TRUE,
				'vid' => '13',
				'depth' => '3',
				'id' => 'term_node_tid_depth_1',
				'table' => 'node',
				'field' => 'term_node_tid_depth',
				'hierarchy' => 1,
				'configure_hs' => '<a href="/admin/build/views/hs_config/savedsearch_ms3y/default/term_node_tid_depth_1">Configure Hierarchical Select</a>',
				'relationship' => 'rate_nid',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Practice Areas */
		if (count($practiceareas)) {
			$filter['views_or_begin'] = array(
				'operator' => '=',
				'value' => '',
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'views_or_begin',
				'table' => 'node',
				'field' => 'views_or_begin',
				'relationship' => 'none',
			);
			$filter['field_individual_pa1_value'] = array(
				'operator' => 'or',
				'value' => $practiceareas,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_individual_pa1_value',
				'table' => 'node_data_field_individual_pa1',
				'field' => 'field_individual_pa1_value',
				'relationship' => 'none',
				'reduce_duplicates' => 0,
			);
			$filter['views_or_next'] = array(
				'operator' => '=',
				'value' => '',
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'views_or_next',
				'table' => 'node',
				'field' => 'views_or_next',
				'relationship' => 'none',
			);
			$filter['field_individual_pa2_value'] = array(
				'operator' => 'or',
				'value' => $practiceareas,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_individual_pa2_value',
				'table' => 'node_data_field_individual_pa2',
				'field' => 'field_individual_pa2_value',
				'relationship' => 'none',
				'reduce_duplicates' => 0,
			);
			$filter['views_or_next_1'] = array(
				'id' => 'views_or_next_1',
				'table' => 'node',
				'field' => 'views_or_next',
			);
			$filter['field_individual_pa3_value'] = array(
				'operator' => 'or',
				'value' => $practiceareas,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_individual_pa3_value',
				'table' => 'node_data_field_individual_pa3',
				'field' => 'field_individual_pa3_value',
				'relationship' => 'none',
				'reduce_duplicates' => 0,
			);
			$filter['views_or_end'] = array(
				'operator' => '=',
				'value' => '',
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'views_or_end',
				'table' => 'node',
				'field' => 'views_or_end',
				'relationship' => 'none',
			);
		}
		/* Filter by Graduation Date */
		if (strlen($gradyear['min'])) {
			$filter['field_individual_graddate_value'] = array(
				'operator' => 'between',
				'value' => array(
					'min' => $gradyear['min'],
					'max' => $gradyear['max'],
					'value' => '2011-01-01 00:00:00',
					'default_date' => '',
					'default_to_date' => '',
				),
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'date_fields' => array(
					'node_data_field_individual_graddate.field_individual_graddate_value' => 'node_data_field_individual_graddate.field_individual_graddate_value',
				),
				'date_method' => 'AND',
				'granularity' => 'year',
				'form_type' => 'date_select',
				'default_date' => '',
				'default_to_date' => '',
				'year_range' => '-50:+0',
				'id' => 'field_individual_graddate_value',
				'table' => 'node_data_field_individual_graddate',
				'field' => 'field_individual_graddate_value',
				'relationship' => 'none',
			);
		}
		/* Filter by Bar Date */
		if (strlen($baryear['min'])) {
			$filter['field_individual_bardate_value'] = array(
				'operator' => 'between',
				'value' => array(
					'min' => $baryear['min'],
					'max' => $baryear['max'],
					'value' => '2011-01-01 00:00:00',
					'default_date' => '',
					'default_to_date' => '',
				),
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'date_fields' => array(
					'node_data_field_individual_bardate.field_individual_bardate_value' => 'node_data_field_individual_bardate.field_individual_bardate_value',
				),
				'date_method' => 'AND',
				'granularity' => 'year',
				'form_type' => 'date_select',
				'default_date' => '',
				'default_to_date' => '',
				'year_range' => '-50:+0',
				'id' => 'field_individual_bardate_value',
				'table' => 'node_data_field_individual_bardate',
				'field' => 'field_individual_bardate_value',
				'relationship' => 'none',
			);
		}
		/* Filter by Partner Date */
		if (strlen($partneryear['min'])) {
			$filter['field_individual_partnerdate_value'] = array(
				'operator' => 'between',
				'value' => array(
					'value' => NULL,
					'min' => $partneryear['min'],
					'max' => $partneryear['max'],
					'default_date' => '',
					'default_to_date' => '',
				),
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'date_fields' => array(
					'node_data_field_individual_partnerdate.field_individual_partnerdate_value' => 'node_data_field_individual_partnerdate.field_individual_partnerdate_value',
				),
				'date_method' => 'AND',
				'granularity' => 'year',
				'form_type' => 'date_select',
				'default_date' => '',
				'default_to_date' => '',
				'year_range' => '-50:+0',
				'id' => 'field_individual_partnerdate_value',
				'table' => 'node_data_field_individual_partnerdate',
				'field' => 'field_individual_partnerdate_value',
				'relationship' => 'none',
			);
		}
		/* Add filter array to override handler */
		$handler->override_option('filters', $filter);

		/* Other Handlers */		
		$handler->override_option('footer', 'All rates displayed are the maximum rates recorded during that time period.
		The firm, position, and city displayed are those of the most recent rate recorded for that attorney.');
		$handler->override_option('footer_format', 1);
		$handler->override_option('footer_empty', 0);

		
		/* Style and Column Handlers */
		$style['columns']['title'] = 'title';
		if (in_array('Position',$cols)) {
			$style['columns']['field_rate_position1_value'] = 'field_rate_position1_value';
		}
		if (in_array('Practice Area',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_pa1_value'] = 'field_individual_pa1_value';
			$style['columns']['field_individual_pa2_value'] = 'field_individual_pa1_value';
			$style['columns']['field_individual_pa3_value'] = 'field_individual_pa1_value';
		}
		if (in_array('Firm',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['title_1'] = 'title_1';
		}
		if (in_array('Region / City',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_firm_headquarters_value'] = 'field_firm_headquarters_value';
		}
		if (in_array('Company',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['title_2'] = 'title_2';
		}
		if (in_array('Industry',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_client_industry_value'] = 'field_client_industry_value';
		}
		if (in_array('Graduation Year',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_graddate_value'] = 'field_individual_graddate_value';
		}
		if (in_array('Bar Year',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_bardate_value'] = 'field_individual_bardate_value';
		}
		if (in_array('Bar State',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_statebar_value'] = 'field_individual_statebar_value';
		}
		if (in_array('Partner Year',$cols)) {
			$style['columns']['field_individual_partnerdate_value'] = 'field_individual_partnerdate_value';
		}
		$style['info']['title'] = array(
			'sortable' => 1,
			'separator' => '',
		);
		if (in_array('Position',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_rate_position1_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Practice Area',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_pa1_value'] = array(
				'separator' => ', ',
			);
			$style['info']['field_individual_pa2_value'] = array(
				'separator' => ', ',
			);
			$style['info']['field_individual_pa3_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Firm',$cols) || in_array('All Columns',$cols)) {
			$style['info']['title_1'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Region / City',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_firm_headquarters_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Company',$cols) || in_array('All Columns',$cols)) {
			$style['info']['title_2'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Industry',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_client_industry_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Graduation Year',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_graddate_value'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Bar Year',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_bardate_value'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Bar State',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_statebar_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Partner Year',$cols)) {
			$style['info']['field_individual_partnerdate_value'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
/* BUILD DETAILED VIEW */
	 } else {
		$view->name = $nid.'_detail';
		$handler->override_option('relationships', array(
		  'field_rate_firm_nid' => array(
		    'label' => 'Firm',
		    'required' => 0,
		    'delta' => -1,
		    'id' => 'field_rate_firm_nid',
		    'table' => 'node_data_field_rate_firm',
		    'field' => 'field_rate_firm_nid',
		    'relationship' => 'none',
		  ),
		  'field_rate_individual_nid' => array(
		    'label' => 'Individual',
		    'required' => 0,
		    'delta' => -1,
		    'id' => 'field_rate_individual_nid',
		    'table' => 'node_data_field_rate_individual',
		    'field' => 'field_rate_individual_nid',
		    'relationship' => 'none',
		  ),
		  'field_rate_filing_nid' => array(
		    'label' => 'Filing',
		    'required' => 0,
		    'delta' => -1,
		    'id' => 'field_rate_filing_nid',
		    'table' => 'node_data_field_rate_filing',
		    'field' => 'field_rate_filing_nid',
		    'relationship' => 'none',
		  ),
		  'field_filing_case_nid' => array(
		    'label' => 'Case',
		    'required' => 0,
		    'delta' => -1,
		    'id' => 'field_filing_case_nid',
		    'table' => 'node_data_field_filing_case',
		    'field' => 'field_filing_case_nid',
		    'relationship' => 'field_rate_filing_nid',
		  ),
		  'field_rate_client_nid' => array(
		    'label' => 'Company',
		    'required' => 0,
		    'delta' => -1,
		    'id' => 'field_rate_client_nid',
		    'table' => 'node_data_field_rate_client',
		    'field' => 'field_rate_client_nid',
		    'relationship' => 'none',
		  ),
		));
		/* Build the fields override handler */
		/* Attorney Name Column */
		$fields['title'] = array(
			'label' => 'Attorney Name',
			'alter' => $alter,
			'empty' => '',
			'hide_empty' => 0,
			'empty_zero' => 0,
			'link_to_node' => 1,
			'exclude' => 0,
			'id' => 'title',
			'table' => 'node',
			'field' => 'title',
			'relationship' => 'field_rate_individual_nid',
		);
		/* Position Column */
		if (in_array('Position',$cols) || in_array('All Columns',$cols)) {
			$fields['field_rate_position1_value'] = array(
				'label' => 'Position',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_rate_position1_value',
				'table' => 'node_data_field_rate_position1',
				'field' => 'field_rate_position1_value',
				'relationship' => 'none',
			);
		}
		/* 3 Practice Area Columns in 1 */
		if (in_array('Practice Area',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_pa1_value'] = array(
				'label' => 'Practice Areas',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_pa1_value',
				'table' => 'node_data_field_individual_pa1',
				'field' => 'field_individual_pa1_value',
				'relationship' => 'field_rate_individual_nid',
			);
			$fields['field_individual_pa2_value'] = array(
				'label' => '',
				'alter' => array(
					'alter_text' => 0,
					'text' => ', [field_individual_pa2_value]',
					'make_link' => 0,
					'path' => '',
					'link_class' => '',
					'alt' => '',
					'prefix' => '',
					'suffix' => '',
					'target' => '',
					'help' => '',
					'trim' => 0,
					'max_length' => '',
					'word_boundary' => 1,
					'ellipsis' => 1,
					'html' => 0,
					'strip_tags' => 0,
				),
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'none',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_pa2_value',
				'table' => 'node_data_field_individual_pa2',
				'field' => 'field_individual_pa2_value',
				'relationship' => 'field_rate_individual_nid',
			);
			$fields['field_individual_pa3_value'] = array(
				'label' => '',
				'alter' => array(
					'alter_text' => 0,
					'text' => ', [field_individual_pa3_value]',
					'make_link' => 0,
					'path' => '',
					'link_class' => '',
					'alt' => '',
					'prefix' => '',
					'suffix' => '',
					'target' => '',
					'help' => '',
					'trim' => 0,
					'max_length' => '',
					'word_boundary' => 1,
					'ellipsis' => 1,
					'html' => 0,
					'strip_tags' => 0,
				),
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_pa3_value',
				'table' => 'node_data_field_individual_pa3',
				'field' => 'field_individual_pa3_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Firm Title Column */
		if (in_array('Firm',$cols) || in_array('All Columns',$cols)) {
			$fields['title_1'] = array(
				'label' => 'Firm',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 1,
				'exclude' => 0,
				'id' => 'title_1',
				'table' => 'node',
				'field' => 'title',
				'relationship' => 'field_rate_firm_nid',
			);
		}
		/* Region City Column */
		if (in_array('Region / City',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_city_value'] = array(
				'label' => 'Region / City',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_city_value',
				'table' => 'node_data_field_individual_city',
				'field' => 'field_individual_city_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Company Column */
		if (in_array('Company',$cols) || in_array('All Columns',$cols)) {
			$fields['field_rate_client_nid'] = array(
				'label' => 'Company',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'exclude' => 0,
				'multiple' => $multiple,
				'id' => 'field_rate_client_nid',
				'table' => 'node_data_field_rate_client',
				'field' => 'field_rate_client_nid',
				'relationship' => 'none',
			);
		}
		/* Industry Column */
		if (in_array('Industry',$cols) || in_array('All Columns',$cols)) {
			$fields['field_client_industry_value'] = array(
				'label' => 'Industry',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_client_industry_value',
				'table' => 'node_data_field_client_industry',
				'field' => 'field_client_industry_value',
				'relationship' => 'field_rate_client_nid',
			);
		}
		/* Graduation Date Column */
		if (in_array('Graduation Year',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_graddate_value'] = array(
				'label' => 'Grad Year',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'year_only',
				'multiple' => array(
					'multiple_number' => '',
					'multiple_from' => '',
					'multiple_to' => '',
					'group' => '',
				),
				'repeat' => array(
					'show_repeat_rule' => '',
				),
				'fromto' => array(
					'fromto' => 'both',
				),
				'exclude' => 0,
				'id' => 'field_individual_graddate_value',
				'table' => 'node_data_field_individual_graddate',
				'field' => 'field_individual_graddate_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Bar Date Column */
		if (in_array('Bar Year',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_bardate_value'] = array(
				'label' => 'Bar Year',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'year_only',
				'multiple' => array(
					'multiple_number' => '',
					'multiple_from' => '',
					'multiple_to' => '',
					'group' => '',
				),
				'repeat' => array(
					'show_repeat_rule' => '',
				),
				'fromto' => array(
					'fromto' => 'both',
				),
				'exclude' => 0,
				'id' => 'field_individual_bardate_value',
				'table' => 'node_data_field_individual_bardate',
				'field' => 'field_individual_bardate_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* State Bar Column */
		if (in_array('Bar State',$cols) || in_array('All Columns',$cols)) {
			$fields['field_individual_statebar_value'] = array(
				'label' => 'Bar State',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 0,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'default',
				'multiple' => $multiple,
				'exclude' => 0,
				'id' => 'field_individual_statebar_value',
				'table' => 'node_data_field_individual_statebar',
				'field' => 'field_individual_statebar_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Partner Year Column */
		if (in_array('Partner Year',$cols)) {
			$fields['field_individual_partnerdate_value'] = array(
				'label' => 'Partner Year',
				'alter' => $alter,
				'empty' => '',
				'hide_empty' => 1,
				'empty_zero' => 0,
				'link_to_node' => 0,
				'label_type' => 'custom',
				'format' => 'year_only',
				'multiple' => array(
					'multiple_number' => '',
					'multiple_from' => '',
					'multiple_to' => '',
					'group' => 0,
				),
				'repeat' => array(
					'show_repeat_rule' => '',
				),
				'fromto' => array(
					'fromto' => 'both',
				),
				'exclude' => 0,
				'id' => 'field_individual_partnerdate_value',
				'table' => 'node_data_field_individual_partnerdate',
				'field' => 'field_individual_partnerdate_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Actual Rate */
		$fields['field_rate_hourly_value'] = array(
			'label' => 'Actual Rate',
			'alter' => $alter,
		    'empty' => '',
			'hide_empty' => 1,
			'empty_zero' => 1,
			'link_to_node' => 1,
			'label_type' => 'custom',
			'format' => 'us_2',
			'multiple' => array(
				'group' => TRUE,
				'multiple_number' => '',
				'multiple_from' => '',
				'multiple_reversed' => FALSE,
			),
			'exclude' => 0,
			'id' => 'field_rate_hourly_value',
			'table' => 'node_data_field_rate_hourly',
			'field' => 'field_rate_hourly_value',
			'relationship' => 'none',
		);
		/* Standard Rate */
		$fields['field_rate_standard_value'] = array(
			'label' => 'Standard Rate',
			'alter' => $alter,
		    'empty' => '',
			'hide_empty' => 1,
			'empty_zero' => 0,
			'link_to_node' => 0,
			'label_type' => 'custom',
			'format' => 'us_2',
			'multiple' => array(
				'group' => TRUE,
				'multiple_number' => '',
				'multiple_from' => '',
				'multiple_reversed' => FALSE,
			),
			'exclude' => 0,
			'id' => 'field_rate_standard_value',
			'table' => 'node_data_field_rate_standard',
			'field' => 'field_rate_standard_value',
			'relationship' => 'none',
		);
		/* Rate Year */
		$fields['field_case_feeappdates_value'] = array(
			'label' => 'Rate year',
			'alter' => $alter,
		    'empty' => '',
			'hide_empty' => 1,
			'empty_zero' => 0,
			'link_to_node' => 1,
			'label_type' => 'custom',
			'format' => 'year_only',
			'multiple' => array(
				'multiple_number' => '',
				'multiple_from' => '',
				'multiple_to' => '',
				'group' => TRUE,
			),
			'repeat' => array(
				'show_repeat_rule' => '',
			),
			'fromto' => array(
				'fromto' => 'value2',
			),
			'exclude' => 0,
			'id' => 'field_case_feeappdates_value',
			'table' => 'node_data_field_case_feeappdates',
			'field' => 'field_case_feeappdates_value',
			'relationship' => 'field_rate_filing_nid',
		);
		/* Add the fields variable to the override options handler */
		$handler->override_option('fields', $fields);

		/* Query Filters */
		/* Make sure Individual is published */
		$filter['status'] = array(
			'operator' => '=',
			'value' => '1',
			'group' => '0',
			'exposed' => FALSE,
			'expose' => array(
				'operator' => FALSE,
				'label' => '',
			),
			'id' => 'status',
			'table' => 'node',
			'field' => 'status',
			'relationship' => 'none',
		);
		/* Check the main records are for rates */
		$filter['type'] = array(
			'operator' => 'in',
			'value' => array(
				'rate' => 'rate',
			),
			'group' => '0',
			'exposed' => FALSE,
			'expose' => array(
				'operator' => FALSE,
				'label' => '',
			),
			'id' => 'type',
			'table' => 'node',
			'field' => 'type',
			'relationship' => 'none',
		);
		/* Filter by Firms */
		if (count($firms)) {
			$filter['field_rate_firm_nid'] = array(
				'operator' => 'or',
				'value' => $firms,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_rate_firm_nid',
				'table' => 'node_data_field_rate_firm',
				'field' => 'field_rate_firm_nid',
				'relationship' => 'none',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Region/City */
		if (count($cities)) {
			$filter['term_node_tid_depth_1'] = array(
				'operator' => 'or',
				'value' => $cities,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'type' => 'select',
				'limit' => TRUE,
				'vid' => '6',
				'depth' => '5',
				'id' => 'term_node_tid_depth_1',
				'table' => 'node',
				'field' => 'term_node_tid_depth',
				'hierarchy' => 1,
				'configure_hs' => '<a href="/admin/build/views/hs_config/stats_ms3y/default/term_node_tid_depth">Configure Hierarchical Select</a>',
				'relationship' => 'field_rate_individual_nid',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Industries */
		if (count($industries)) {
			$filter['field_client_industry_value'] = array(
				'operator' => 'or',
				'value' => $industries,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_client_industry_value',
				'table' => 'node_data_field_client_industry',
				'field' => 'field_client_industry_value',
				'relationship' => 'field_rate_client_nid',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Position */
		if (count($positions)) {
			$filter['term_node_tid_depth'] = array(
				'operator' => 'or',
				'value' => $positions,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'use_operator' => 0,
					'operator' => 'term_node_tid_depth_op',
					'identifier' => 'field_position_value',
					'label' => 'Position:',
					'optional' => 1,
					'single' => 0,
					'remember' => 0,
					'reduce' => 0,
				),
				'type' => 'select',
				'limit' => TRUE,
				'vid' => '13',
				'depth' => '3',
				'id' => 'term_node_tid_depth',
				'table' => 'node',
				'field' => 'term_node_tid_depth',
				'hierarchy' => 1,
				'configure_hs' => '<a href="/admin/build/views/hs_config/savedsearch_detail/default/term_node_tid_depth">Configure Hierarchical Select</a>',
				'relationship' => 'none',
				'reduce_duplicates' => 0,
			);
		}
		/* Filter by Practice Areas */
		if (count($practiceareas)) {
			$filter['views_or_begin'] = array(
				'operator' => '=',
				'value' => '',
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'views_or_begin',
				'table' => 'node',
				'field' => 'views_or_begin',
				'relationship' => 'none',
			);
			$filter['field_individual_pa1_value'] = array(
				'operator' => 'or',
				'value' => $practiceareas,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_individual_pa1_value',
				'table' => 'node_data_field_individual_pa1',
				'field' => 'field_individual_pa1_value',
				'relationship' => 'field_rate_individual_nid',
				'reduce_duplicates' => 0,
			);
			$filter['views_or_next'] = array(
				'operator' => '=',
				'value' => '',
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'views_or_next',
				'table' => 'node',
				'field' => 'views_or_next',
				'relationship' => 'none',
			);
			$filter['field_individual_pa2_value'] = array(
				'operator' => 'or',
				'value' => $practiceareas,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_individual_pa2_value',
				'table' => 'node_data_field_individual_pa2',
				'field' => 'field_individual_pa2_value',
				'relationship' => 'field_rate_individual_nid',
				'reduce_duplicates' => 0,
			);
			$filter['views_or_next_1'] = array(
				'id' => 'views_or_next_1',
				'table' => 'node',
				'field' => 'views_or_next',
			);
			$filter['field_individual_pa3_value'] = array(
				'operator' => 'or',
				'value' => $practiceareas,
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'field_individual_pa3_value',
				'table' => 'node_data_field_individual_pa3',
				'field' => 'field_individual_pa3_value',
				'relationship' => 'field_rate_individual_nid',
				'reduce_duplicates' => 0,
			);
			$filter['views_or_end'] = array(
				'operator' => '=',
				'value' => '',
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'id' => 'views_or_end',
				'table' => 'node',
				'field' => 'views_or_end',
				'relationship' => 'none',
			);
		}
		/* Filter by Graduation Date */
		if (strlen($gradyear['min'])) {
			$filter['field_individual_graddate_value'] = array(
				'operator' => 'between',
				'value' => array(
					'min' => $gradyear['min'],
					'max' => $gradyear['max'],
					'value' => '2011-01-01 00:00:00',
					'default_date' => '',
					'default_to_date' => '',
				),
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'date_fields' => array(
					'node_data_field_individual_graddate.field_individual_graddate_value' => 'node_data_field_individual_graddate.field_individual_graddate_value',
				),
				'date_method' => 'AND',
				'granularity' => 'year',
				'form_type' => 'date_select',
				'default_date' => '',
				'default_to_date' => '',
				'year_range' => '-50:+0',
				'id' => 'field_individual_graddate_value',
				'table' => 'node_data_field_individual_graddate',
				'field' => 'field_individual_graddate_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Filter by Bar Date */
		if (strlen($baryear['min'])) {
			$filter['field_individual_bardate_value'] = array(
				'operator' => 'between',
				'value' => array(
					'min' => $baryear['min'],
					'max' => $baryear['max'],
					'value' => '2011-01-01 00:00:00',
					'default_date' => '',
					'default_to_date' => '',
				),
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'date_fields' => array(
					'node_data_field_individual_bardate.field_individual_bardate_value' => 'node_data_field_individual_bardate.field_individual_bardate_value',
				),
				'date_method' => 'AND',
				'granularity' => 'year',
				'form_type' => 'date_select',
				'default_date' => '',
				'default_to_date' => '',
				'year_range' => '-50:+0',
				'id' => 'field_individual_bardate_value',
				'table' => 'node_data_field_individual_bardate',
				'field' => 'field_individual_bardate_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Filter by Partner Date */
		if (strlen($partneryear['min'])) {
			$filter['field_individual_partnerdate_value'] = array(
				'operator' => 'between',
				'value' => array(
					'value' => NULL,
					'min' => $partneryear['min'],
					'max' => $partneryear['max'],
					'default_date' => '',
					'default_to_date' => '',
				),
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'date_fields' => array(
					'node_data_field_individual_partnerdate.field_individual_partnerdate_value' => 'node_data_field_individual_partnerdate.field_individual_partnerdate_value',
				),
				'date_method' => 'AND',
				'granularity' => 'year',
				'form_type' => 'date_select',
				'default_date' => '',
				'default_to_date' => '',
				'year_range' => '-50:+0',
				'id' => 'field_individual_partnerdate_value',
				'table' => 'node_data_field_individual_partnerdate',
				'field' => 'field_individual_partnerdate_value',
				'relationship' => 'field_rate_individual_nid',
			);
		}
		/* Filter by Rate Year */
		if (strlen($rateyear['min'])) {
			$filter['field_case_feeappdates_value2'] = array(
				'operator' => 'between',
				'value' => array(
					'value' => NULL,
					'min' => $rateyear['min'],
					'max' => $rateyear['max'],
					'default_date' => '',
					'default_to_date' => '',
				),
				'group' => '0',
				'exposed' => FALSE,
				'expose' => array(
					'operator' => FALSE,
					'label' => '',
				),
				'date_fields' => array(
					'node_data_field_case_feeappdates.field_case_feeappdates_value2' => 'node_data_field_case_feeappdates.field_case_feeappdates_value2',
				),
				'date_method' => 'AND',
				'granularity' => 'year',
				'form_type' => 'date_select',
				'default_date' => '',
				'default_to_date' => '',
				'year_range' => '-20:+0',
				'id' => 'field_case_feeappdates_value2',
				'table' => 'node_data_field_case_feeappdates',
				'field' => 'field_case_feeappdates_value2',
				'relationship' => 'field_rate_filing_nid',
			);
		}
		/* Add filter array to override handler */
		$handler->override_option('filters', $filter);


		/* Style and Column Handlers */
		$style['order'] = 'desc';
		$style['columns']['title'] = 'title';
		if (in_array('Position',$cols)) {
			$style['columns']['field_rate_position1_value'] = 'field_rate_position1_value';
		}
		if (in_array('Practice Area',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_pa1_value'] = 'field_individual_pa1_value';
			$style['columns']['field_individual_pa2_value'] = 'field_individual_pa1_value';
			$style['columns']['field_individual_pa3_value'] = 'field_individual_pa1_value';
		}
		if (in_array('Firm',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['title_1'] = 'title_1';
		}
		if (in_array('Region / City',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_city_value'] = 'field_individual_city_value';
		}
		if (in_array('Company',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['title_2'] = 'title_2';
		}
		if (in_array('Industry',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_client_industry_value'] = 'field_client_industry_value';
		}
		if (in_array('Graduation Year',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_graddate_value'] = 'field_individual_graddate_value';
		}
		if (in_array('Bar Year',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_bardate_value'] = 'field_individual_bardate_value';
		}
		if (in_array('Bar State',$cols) || in_array('All Columns',$cols)) {
			$style['columns']['field_individual_statebar_value'] = 'field_individual_statebar_value';
		}
		if (in_array('Partner Year',$cols)) {
			$style['columns']['field_individual_partnerdate_value'] = 'field_individual_partnerdate_value';
		}
		$style['columns']['field_rate_hourly_value'] = 'field_rate_hourly_value';
		$style['columns']['field_rate_standard_value'] = 'field_rate_standard_value';
		$style['columns']['field_case_feeappdates_value'] = 'field_case_feeappdates_value';
		$style['info']['title'] = array(
			'sortable' => 1,
			'separator' => '',
		);
		if (in_array('Position',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_rate_position1_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Practice Area',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_pa1_value'] = array(
				'separator' => ', ',
			);
			$style['info']['field_individual_pa2_value'] = array(
				'separator' => ', ',
			);
			$style['info']['field_individual_pa3_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Firm',$cols) || in_array('All Columns',$cols)) {
			$style['info']['title_1'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Region / City',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_city_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Company',$cols) || in_array('All Columns',$cols)) {
			$style['info']['title_2'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Industry',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_client_industry_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Graduation Year',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_graddate_value'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Bar Year',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_bardate_value'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		if (in_array('Bar State',$cols) || in_array('All Columns',$cols)) {
			$style['info']['field_individual_statebar_value'] = array(
				'separator' => '',
			);
		}
		if (in_array('Partner Year',$cols)) {
			$style['info']['field_individual_partnerdate_value'] = array(
				'sortable' => 1,
				'separator' => '',
			);
		}
		$style['info']['field_rate_hourly_value'] = array(
			'sortable' => 1,
			'separator' => '',
		);
		$style['info']['field_rate_standard_value'] = array(
			'sortable' => 1,
			'separator' => '',
		);
		$style['info']['field_case_feeappdates_value'] = array(
			'sortable' => 1,
			'separator' => '',
		);
		$style['default'] = 'field_rate_hourly_value';
	}
/* BACK TO SHARED VIEW CODE */
	/* Add the styles to the override option handler */
	$handler->override_option('style_options', $style);

	/* Create the XLS feed display */
	$handler = $view->new_display('feed', 'XLS Feed', 'feed_1');
	$handler->override_option('header_format', '3');
	$handler->override_option('header_empty', 1);
	$handler->override_option('footer_format', '1');
	$handler->override_option('footer_empty', 0);
	$handler->override_option('items_per_page', $download_limit);
	$handler->override_option('use_pager', '0');
	$handler->override_option('style_plugin', 'views_xls');
	/* 	Change the titles for the practice area columns */
	if (in_array('Practice Area',$cols) || in_array('All Columns',$cols)) {
		$style['columns']['field_individual_pa1_value'] = 'field_individual_pa1_value';
		$style['columns']['field_individual_pa2_value'] = 'field_individual_pa2_value';
		$style['columns']['field_individual_pa3_value'] = 'field_individual_pa3_value';
		$style['info']['field_individual_pa1_value']['separator'] = '';
		$style['info']['field_individual_pa2_value']['separator'] = '';
		$style['info']['field_individual_pa3_value']['separator'] = '';
		$fields['field_individual_pa1_value']['label'] = 'Practice Area 1';
		$fields['field_individual_pa2_value']['label'] = 'Practice Area 2';
		$fields['field_individual_pa3_value']['label'] = 'Practice Area 3';
		$fields['field_individual_pa1_value']['alter'] = $alter;
		$fields['field_individual_pa2_value']['alter'] = $alter;
		$fields['field_individual_pa3_value']['alter'] = $alter;
	}
	/* Override other style options */
	$style['mission_description'] = FALSE;
	$style['description'] = '';
	$style['attach_text'] = 'XLS';
	$style['provide_file'] = 1;
	$style['filename'] = 'Valeo_SavedSearch_' . $timestamp . '.xls';
	$style['parent_sort'] = 1;

	$handler->override_option('style_options', $style);
	$handler->override_option('fields', $fields);

	$handler->override_option('row_plugin', '');
	$handler->override_option('path', 'node/'. $nid . '/search_xls');
	$handler->override_option('menu', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
		'name' => 'navigation',
	));
	$handler->override_option('tab_options', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
		'name' => 'navigation',
	));
	$handler->override_option('displays', array(
		'default' => 'default',
	));
	$handler->override_option('sitename_title', FALSE);

	/* Create the CSV feed display */
	$handler = $view->new_display('feed', 'CSV Feed', 'feed_2');
	$handler->override_option('header_format', '3');
	$handler->override_option('header_empty', 1);
	$handler->override_option('footer_format', '1');
	$handler->override_option('footer_empty', 0);
	$handler->override_option('items_per_page', 0);
	$handler->override_option('use_pager', '0');
	$handler->override_option('style_plugin', 'views_csv');
	/* Override other style options */
	$style['mission_description'] = FALSE;
	$style['description'] = '';
	$style['attach_text'] = 'CSV';
	$style['provide_file'] = 1;
	$style['filename'] = 'Valeo_SavedSearch_' . $timestamp . '.csv';
	$style['parent_sort'] = 1;
	$style['seperator'] = ',';
	$style['quote'] = 1;
	$style['trim'] = 1;
	$style['header'] = 1;

	$handler->override_option('style_options', $style);
	$handler->override_option('fields', $fields);

	$handler->override_option('row_plugin', '');
	$handler->override_option('path', 'node/'. $nid . '/search_csv');
	$handler->override_option('menu', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
		'name' => 'navigation',
	));
	$handler->override_option('tab_options', array(
		'type' => 'none',
		'title' => '',
		'description' => '',
		'weight' => 0,
		'name' => 'navigation',
	));

	$handler->override_option('sitename_title', FALSE);

	return $view;
}
