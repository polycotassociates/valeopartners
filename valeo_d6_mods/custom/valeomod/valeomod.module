<?php

// $Id$

/**
 * @file
 *   Valeo functions
 */

function is_administrator() {
	global $user;
	if ($user->roles[3] || $user->roles[5]) {
		return true;
	} else {
		return false;
	}
}


/**
 *   Alter the display of Firm form
 */
function valeomod_form_alter(&$form, $form_state, $form_id) {
	switch ($form_id) {
		// User Profile form
		case 'firm_node_form':
			$form['buttons']['reviewed'] = array(
				'#type' => 'submit',
				'#access' => 1,
				'#value' => t('Reviewed - No Changes'),
				'#weight' => 20,
				'#return_value' => t('Save'),
				'#submit' => array('node_form_submit'),
			);
			break;
	}
}



/**
* Return Variables
*/
/* Variables for Alerts */
function valeo_get_compcircle_status($ID = false) {
	$query = '
		SELECT node.nid AS nid 
		FROM node node
			LEFT JOIN content_field_profile_compcircle node_data_field_profile_compcircle ON node.vid = node_data_field_profile_compcircle.vid 
			INNER JOIN node node_node_data_field_profile_compcircle ON node_data_field_profile_compcircle.field_profile_compcircle_nid = node_node_data_field_profile_compcircle.nid 
			INNER JOIN users users ON node.uid = users.uid 
		WHERE (node_data_field_profile_compcircle.field_profile_compcircle_nid IS NOT NULL) AND 
			(node_node_data_field_profile_compcircle.status <> 0) AND 
			(users.uid = %d)
		LIMIT 0,1';
	if ($ID) {
		$thisID = $ID;
	} else {
		global $user;
		$thisID = $user->uid;
	}
	$result = db_query($query, $thisID);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item;
	if (count($thisdata))
		return true;
	return false;
}

function valeo_get_compcircle_list($ID = false) {
	$query = '
		SELECT node_node_data_field_profile_compcircle.nid AS nid
		FROM node node
			LEFT JOIN content_field_profile_compcircle node_data_field_profile_compcircle ON node.vid = node_data_field_profile_compcircle.vid
			INNER JOIN node node_node_data_field_profile_compcircle ON node_data_field_profile_compcircle.field_profile_compcircle_nid = node_node_data_field_profile_compcircle.nid
			INNER JOIN users users ON node.uid = users.uid
		WHERE
			(node_data_field_profile_compcircle.field_profile_compcircle_nid IS NOT NULL)
			AND(node_node_data_field_profile_compcircle.status <> 0)
			AND(users.uid = %d)
		LIMIT 0,25';
	if ($ID) {
		$thisID = $ID;
	} else {
		global $user;
		$thisID = $user->uid;
	}
	$result = db_query($query, $thisID);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item['nid'];
	if (count($thisdata)) {
		$output = implode(',',$thisdata);
		return $output;
	}
	return;
}

function valeo_get_compcircle_users() {
	$query = '
		SELECT DISTINCT	users.uid AS uid
		FROM node node 
			LEFT JOIN content_field_profile_compcircle node_data_field_profile_compcircle ON node.vid = node_data_field_profile_compcircle.vid
			INNER JOIN node node_node_data_field_profile_compcircle ON node_data_field_profile_compcircle.field_profile_compcircle_nid = node_node_data_field_profile_compcircle.nid
			INNER JOIN users users ON node.uid = users.uid
		WHERE
			(node_data_field_profile_compcircle.field_profile_compcircle_nid IS NOT NULL)
			AND(node_node_data_field_profile_compcircle. STATUS <> 0)
		ORDER BY
			uid ASC';
	$result = db_query($query);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item['uid'];
	if (count($thisdata)) {
		$output = implode(',',$thisdata);
		return $output;
	}
	return;
}

function valeo_get_compcircle_users_alerts_emails() {
	$complist = views_embed_view('comp_users_alerts_emails');
	if ($complist) {
		$complist = substr($complist, 0, -2); // remove trailing ||
		if ($complist)
			return $complist;
	}
	return;
}

function valeo_get_compcircle_list_names() {
	$complist = views_embed_view('comp_list_names');
	if ($complist) {
		$complist = substr($complist, 0, -1); // remove trailing comma
		$complist = explode(',',$complist); // add a space to the comma separator
		$complist = implode(', ',$complist);
		if ($complist)
			return $complist;
	}
	return 'You have no firms in your Competitor Circle. Select them <a href="/user/me/edit/profile" title="Set Your Competitor Circle">here</a>.';
}


/* Get the variables for the Competitor Search */
function valeo_get_compsearch_status($ID = false) {
	$query = '
		SELECT node.nid AS nid 
		FROM node node
			LEFT JOIN content_field_profile_compsearch node_data_field_profile_compsearch ON node.vid = node_data_field_profile_compsearch.vid 
			INNER JOIN node node_node_data_field_profile_compsearch ON node_data_field_profile_compsearch.field_profile_compsearch_nid = node_node_data_field_profile_compsearch.nid 
			INNER JOIN users users ON node.uid = users.uid 
		WHERE (node_data_field_profile_compsearch.field_profile_compsearch_nid IS NOT NULL) AND 
			(node_node_data_field_profile_compsearch.status <> 0) AND 
			(users.uid = %d)
		LIMIT 0,1';
	if ($ID) {
		$thisID = $ID;
	} else {
		global $user;
		$thisID = $user->uid;
	}
	$result = db_query($query, $thisID);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item;
	if (count($thisdata))
		return true;
	return false;
}

function valeo_get_compsearch_list($ID = false) {
	$query = '
		SELECT node_node_data_field_profile_compsearch.nid AS nid
		FROM node node
			LEFT JOIN content_field_profile_compsearch node_data_field_profile_compsearch ON node.vid = node_data_field_profile_compsearch.vid
			INNER JOIN node node_node_data_field_profile_compsearch ON node_data_field_profile_compsearch.field_profile_compsearch_nid = node_node_data_field_profile_compsearch.nid
			INNER JOIN users users ON node.uid = users.uid
		WHERE
			(node_data_field_profile_compsearch.field_profile_compsearch_nid IS NOT NULL)
			AND(node_node_data_field_profile_compsearch.status <> 0)
			AND(users.uid = %d)';
	if ($ID) {
		$thisID = $ID;
	} else {
		global $user;
		$thisID = $user->uid;
	}
	$result = db_query($query, $thisID);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item['nid'];
	if (count($thisdata)) {
		$output = implode(',',$thisdata);
		return $output;
	}
	return;
}

function valeo_get_compsearch_users() {
	$query = '
		SELECT DISTINCT	users.uid AS uid
		FROM node node 
			LEFT JOIN content_field_profile_compsearch node_data_field_profile_compsearch ON node.vid = node_data_field_profile_compsearch.vid
			INNER JOIN node node_node_data_field_profile_compsearch ON node_data_field_profile_compsearch.field_profile_compsearch_nid = node_node_data_field_profile_compsearch.nid
			INNER JOIN users users ON node.uid = users.uid
		WHERE
			(node_data_field_profile_compsearch.field_profile_compsearch_nid IS NOT NULL)
			AND(node_node_data_field_profile_compsearch.status <> 0)
		ORDER BY
			uid ASC';
	$result = db_query($query);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item['uid'];
	if (count($thisdata)) {
		$output = implode(',',$thisdata);
		return $output;
	}
	return;
}

function valeo_get_compsearch_list_names() {
	$complist = views_embed_view('compsearch_list_names');
	if ($complist) {
		$complist = substr($complist, 0, -1); // remove trailing comma
		$complist = explode(',',$complist); // add a space to the comma separator
		$complist = implode(', ',$complist);
		if ($complist)
			return $complist;
	}
	return 'You have no firms in your Competitor Circle';
}


function valeo_get_compsearch_list_IDs($ID = false) {
	$list_query = "SELECT firm_node.nid
					FROM node node LEFT OUTER JOIN content_field_profile_compcircle compcircle ON node.vid = compcircle.vid
						INNER JOIN node firm_node ON compcircle.field_profile_compcircle_nid = firm_node.nid
						INNER JOIN users users ON node.uid = users.uid
					WHERE (compcircle.field_profile_compcircle_nid IS NOT NULL)
						AND(firm_node.status <> 0)
						AND(users.uid = %d)
					ORDER BY firm_node.title	";
					//Original Limit 25 - LIMIT 0,25
	if ($ID) {
		$thisID = $ID;
	} else {
		global $user;
		$thisID = $user->uid;
	}
	$list_args = array(
		'ID' => $thisID
	);
	$list_result = db_query($list_query, $list_args);
	while ($item = db_fetch_array($list_result))
		$list_data[] = $item['nid'];
	return $list_data;
}


/**
* Process returned data
*/
function valeo_get_compcircle_current_array($ID = false) {
	$list_data = valeo_get_compsearch_list_IDs($ID);
	$query = "
			SELECT rate_node.nid AS rate_nid, 
				rate_content.field_rate_individual_nid AS individual_nid, 
				rate_content.field_rate_firm_nid AS firm_nid, 
				rate_content.field_rate_hourly_value AS hourly, 
				individual_node.title AS individual_title, 
				firm_node.title AS firm_title, 
				position_term.`name` AS position, 
				position_term.weight AS position_weight, 
				DATE_FORMAT(STR_TO_DATE(individual_content.field_individual_graddate_value,'%%Y-%%m-%%dT%%T'),'%%Y') AS graddate, 
				practicearea1_term.`name` AS practicearea1, 
				practicearea2_term.`name` AS practicearea2, 
				practicearea3_term.`name` AS practicearea3,
				city_term.`name` AS city
			FROM content_type_rate rate_content INNER JOIN node rate_node ON rate_content.vid = rate_node.vid
				 INNER JOIN node individual_node ON individual_node.nid = rate_content.field_rate_individual_nid
				 INNER JOIN content_type_individual individual_content ON individual_content.vid = individual_node.vid
				 LEFT OUTER JOIN term_data practicearea1_term ON practicearea1_term.tid = individual_content.field_individual_pa1_value
				 LEFT OUTER JOIN term_data practicearea2_term ON practicearea2_term.tid = individual_content.field_individual_pa2_value
				 LEFT OUTER JOIN term_data practicearea3_term ON practicearea3_term.tid = individual_content.field_individual_pa3_value
				 INNER JOIN node firm_node ON firm_node.nid = rate_content.field_rate_firm_nid
				 INNER JOIN content_type_firm firm_content ON firm_content.vid = firm_node.vid
				 LEFT OUTER JOIN term_data city_term ON city_term.tid = individual_content.field_individual_city_value
				 INNER JOIN term_data position_term ON position_term.tid = rate_content.field_rate_position1_value
				 INNER JOIN node filing_node ON filing_node.nid = rate_content.field_rate_filing_nid
				 INNER JOIN content_type_filing filing_content ON filing_content.vid = filing_node.vid
			WHERE rate_node.status <> 0 AND rate_node.type in('rate')
				AND (rate_content.field_rate_position1_value IN('2111','2116','2115','2113','2114','2124','2126','2721','2133','2387','2792'))
				AND (rate_content.field_rate_firm_nid IN(".db_placeholders($list_data, 'int')."))
				AND (DATE_FORMAT(STR_TO_DATE(filing_content.field_case_feeappdates_value2,'%%Y-%%m-%%dT%%T'),'%%Y')= '%d')
				AND (rate_content.field_rate_hourly_value IS NOT NULL)
				AND (rate_content.field_rate_hourly_value > 0)
			ORDER BY firm_title ASC, position_weight ASC, hourly DESC, individual_title ASC";
	$year = date('Y',strtotime('-0 year')); // Modify to show previous years
	$args = array_merge($list_data, array($year)); // merge arrays to get around bug in drupal args where only the array argument is sent to the query and no others
	$result = db_query($query, $args);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item;
	return $thisdata;
}

function valeo_get_all_data_updated($ID=false){
	$list_data = valeo_get_compsearch_list_IDs($ID);

	$previousyear = date('Y',strtotime('-1 year'));
	$currentyear = date('Y',strtotime('-0 year'));

	$query = "SELECT rate_content.field_rate_individual_nid AS individual_nid,
				rate_content.field_rate_firm_nid AS firm_nid,
		(SELECT MAX(rate_content2.field_rate_hourly_value)
			FROM content_type_rate rate_content2 INNER JOIN node rate_node ON rate_content2.vid = rate_node.vid
			 INNER JOIN node filing_node ON filing_node.nid = rate_content2.field_rate_filing_nid
			 INNER JOIN content_type_filing filing_content ON filing_content.vid = filing_node.vid
			WHERE rate_node.status <> 0 AND rate_node.type in('rate')
			AND (rate_content2.field_rate_position1_value IN('2111','2116','2115','2113','2114','2124','2126','2721','2133','2387','2792'))
			AND (DATE_FORMAT(STR_TO_DATE(filing_content.field_case_feeappdates_value2,'%%Y-%%m-%%dT%%T'),'%%Y')= '" . $previousyear . "')
			AND (rate_content2.field_rate_hourly_value IS NOT NULL)
			AND (rate_content2.field_rate_hourly_value > 0)
			AND (rate_content2.field_rate_firm_nid = rate_content.field_rate_firm_nid)
			AND (rate_content2.field_rate_individual_nid = rate_content.field_rate_individual_nid)) AS rate_" . $previousyear . ",
        (SELECT MAX(rate_content3.field_rate_hourly_value)
			FROM content_type_rate rate_content3 INNER JOIN node rate_node ON rate_content3.vid = rate_node.vid
			 INNER JOIN node filing_node ON filing_node.nid = rate_content3.field_rate_filing_nid
			 INNER JOIN content_type_filing filing_content ON filing_content.vid = filing_node.vid
			WHERE rate_node.status <> 0 AND rate_node.type in('rate')
			AND (rate_content3.field_rate_position1_value IN('2111','2116','2115','2113','2114','2124','2126','2721','2133','2387','2792'))
			AND (DATE_FORMAT(STR_TO_DATE(filing_content.field_case_feeappdates_value2,'%%Y-%%m-%%dT%%T'),'%%Y')= '" . $currentyear . "')
			AND (rate_content3.field_rate_hourly_value IS NOT NULL)
			AND (rate_content3.field_rate_hourly_value > 0)
			AND (rate_content3.field_rate_firm_nid = rate_content.field_rate_firm_nid)
			AND (rate_content3.field_rate_individual_nid = rate_content.field_rate_individual_nid)) AS rate_" . $currentyear . ",
				individual_node.title AS individual_title,
				firm_node.title AS firm_title,
				position_term.`name` AS position,
				position_term.weight AS position_weight,
				DATE_FORMAT(STR_TO_DATE(individual_content.field_individual_graddate_value,'%%Y-%%m-%%dT%%T'),'%%Y') AS graddate,
				practicearea1_term.`name` AS practicearea1,
				practicearea2_term.`name` AS practicearea2,
				practicearea3_term.`name` AS practicearea3,
				city_term.`name` AS city
			FROM content_type_rate rate_content INNER JOIN node rate_node ON rate_content.vid = rate_node.vid
				 INNER JOIN node individual_node ON individual_node.nid = rate_content.field_rate_individual_nid
				 INNER JOIN content_type_individual individual_content ON individual_content.vid = individual_node.vid
				 LEFT OUTER JOIN term_data practicearea1_term ON practicearea1_term.tid = individual_content.field_individual_pa1_value
				 LEFT OUTER JOIN term_data practicearea2_term ON practicearea2_term.tid = individual_content.field_individual_pa2_value
				 LEFT OUTER JOIN term_data practicearea3_term ON practicearea3_term.tid = individual_content.field_individual_pa3_value
				 INNER JOIN node firm_node ON firm_node.nid = rate_content.field_rate_firm_nid
				 INNER JOIN content_type_firm firm_content ON firm_content.vid = firm_node.vid
				 LEFT OUTER JOIN term_data city_term ON city_term.tid = individual_content.field_individual_city_value
				 INNER JOIN term_data position_term ON position_term.tid = rate_content.field_rate_position1_value
				 INNER JOIN node filing_node ON filing_node.nid = rate_content.field_rate_filing_nid
				 INNER JOIN content_type_filing filing_content ON filing_content.vid = filing_node.vid
			WHERE rate_node.status <> 0 AND rate_node.type in('rate')
				AND (rate_content.field_rate_position1_value IN('2111','2116','2115','2113','2114','2124','2126','2721','2133','2387','2792'))
				AND (rate_content.field_rate_firm_nid IN (".db_placeholders($list_data, 'int')."))
				AND (rate_content.field_rate_hourly_value IS NOT NULL)
				AND (rate_content.field_rate_hourly_value > 0)
				AND (DATE_FORMAT(STR_TO_DATE(filing_content.field_case_feeappdates_value2,'%%Y-%%m-%%dT%%T'),'%%Y') IN ('" . $previousyear . "','" . $currentyear . "'))
			GROUP BY rate_content.field_rate_individual_nid,
				rate_content.field_rate_firm_nid,
				individual_node.title,
				firm_node.title,
				position_term.`name`,
				position_term.weight,
				practicearea1_term.`name`,
				practicearea2_term.`name`,
				practicearea3_term.`name`,
				city_term.`name`
				ORDER BY firm_title ASC, position_weight ASC, individual_title ASC";
	$args = array_merge($list_data); // merge arrays to get around bug in drupal args where only the array argument is sent to the query and no others
	$result = db_query($query, $args);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item;
	return $thisdata;
}


function valeo_get_compcircle_special_array($ID = false) {
	$list_data = valeo_get_compsearch_list_IDs($ID);
	$query = "
			SELECT rate_node.nid AS rate_nid,
				rate_content.field_rate_individual_nid AS individual_nid,
				rate_content.field_rate_firm_nid AS firm_nid,
				rate_content.field_rate_hourly_value AS hourly,
				individual_node.title AS individual_title,
				firm_node.title AS firm_title,
				position_term.`name` AS position,
				position_term.weight AS position_weight,
				DATE_FORMAT(STR_TO_DATE(individual_content.field_individual_graddate_value,'%%Y-%%m-%%dT%%T'),'%%Y') AS graddate,
				practicearea1_term.`name` AS practicearea1,
				practicearea2_term.`name` AS practicearea2,
				practicearea3_term.`name` AS practicearea3,
				city_term.`name` AS city
			FROM content_type_rate rate_content INNER JOIN node rate_node ON rate_content.vid = rate_node.vid
				 INNER JOIN node individual_node ON individual_node.nid = rate_content.field_rate_individual_nid
				 INNER JOIN content_type_individual individual_content ON individual_content.vid = individual_node.vid
				 LEFT OUTER JOIN term_data practicearea1_term ON practicearea1_term.tid = individual_content.field_individual_pa1_value
				 LEFT OUTER JOIN term_data practicearea2_term ON practicearea2_term.tid = individual_content.field_individual_pa2_value
				 LEFT OUTER JOIN term_data practicearea3_term ON practicearea3_term.tid = individual_content.field_individual_pa3_value
				 INNER JOIN node firm_node ON firm_node.nid = rate_content.field_rate_firm_nid
				 INNER JOIN content_type_firm firm_content ON firm_content.vid = firm_node.vid
				 LEFT OUTER JOIN term_data city_term ON city_term.tid = individual_content.field_individual_city_value
				 INNER JOIN term_data position_term ON position_term.tid = rate_content.field_rate_position1_value
				 INNER JOIN node filing_node ON filing_node.nid = rate_content.field_rate_filing_nid
				 INNER JOIN content_type_filing filing_content ON filing_content.vid = filing_node.vid
			WHERE rate_node.status <> 0 AND rate_node.type in('rate')
				AND (rate_content.field_rate_position1_value IN('2111','2116','2115','2113','2114','2124','2126','2721','2133','2387','2792'))
				AND (rate_content.field_rate_firm_nid IN(".db_placeholders($list_data, 'int')."))
				AND (DATE_FORMAT(STR_TO_DATE(filing_content.field_case_feeappdates_value2,'%%Y-%%m-%%dT%%T'),'%%Y')= '%d')
				AND (rate_content.field_rate_hourly_value IS NOT NULL)
				AND (rate_content.field_rate_hourly_value > 0)
			ORDER BY firm_title ASC, position_weight ASC, hourly DESC, individual_title ASC";
	$year = date('Y',strtotime('-1 year')); // Modify to show previous years
	$args = array_merge($list_data, array($year)); // merge arrays to get around bug in drupal args where only the array argument is sent to the query and no others
	$result = db_query($query, $args);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item;
	return $thisdata;
}

function valeo_get_compcircle_current_new_array($ID = false) {
	$list_data = valeo_get_compsearch_list_IDs($ID);
	$query = "
			SELECT rate_node.nid AS rate_nid, 
				rate_content.field_rate_individual_nid AS individual_nid, 
				rate_content.field_rate_firm_nid AS firm_nid, 
				rate_content.field_rate_hourly_value AS hourly, 
				individual_node.title AS individual_title, 
				firm_node.title AS firm_title, 
				position_term.`name` AS position, 
				position_term.weight AS position_weight, 
				DATE_FORMAT(STR_TO_DATE(individual_content.field_individual_graddate_value,'%%Y-%%m-%%dT%%T'),'%%Y') AS graddate, 
				practicearea1_term.`name` AS practicearea1, 
				practicearea2_term.`name` AS practicearea2, 
				practicearea3_term.`name` AS practicearea3,
				city_term.`name` AS city
			FROM content_type_rate rate_content INNER JOIN node rate_node ON rate_content.vid = rate_node.vid
				 INNER JOIN node individual_node ON individual_node.nid = rate_content.field_rate_individual_nid
				 INNER JOIN content_type_individual individual_content ON individual_content.vid = individual_node.vid
				 LEFT OUTER JOIN term_data practicearea1_term ON practicearea1_term.tid = individual_content.field_individual_pa1_value
				 LEFT OUTER JOIN term_data practicearea2_term ON practicearea2_term.tid = individual_content.field_individual_pa2_value
				 LEFT OUTER JOIN term_data practicearea3_term ON practicearea3_term.tid = individual_content.field_individual_pa3_value
				 INNER JOIN node firm_node ON firm_node.nid = rate_content.field_rate_firm_nid
				 INNER JOIN content_type_firm firm_content ON firm_content.vid = firm_node.vid
				 LEFT OUTER JOIN term_data city_term ON city_term.tid = individual_content.field_individual_city_value
				 INNER JOIN term_data position_term ON position_term.tid = rate_content.field_rate_position1_value
				 INNER JOIN node filing_node ON filing_node.nid = rate_content.field_rate_filing_nid
				 INNER JOIN content_type_filing filing_content ON filing_content.vid = filing_node.vid
			WHERE rate_node.status <> 0 AND rate_node.type in('rate')
				AND (rate_node.created >= UNIX_TIMESTAMP(NOW())-1209600) AND (rate_node.created <= UNIX_TIMESTAMP(NOW())+0)
				AND (rate_content.field_rate_position1_value IN('2111','2116','2115','2113','2114','2124','2126','2721','2133','2387','2792'))
				AND (rate_content.field_rate_firm_nid IN(".db_placeholders($list_data, 'int')."))
				AND (DATE_FORMAT(STR_TO_DATE(filing_content.field_case_feeappdates_value2,'%%Y-%%m-%%dT%%T'),'%%Y')= '%d')
				AND (rate_content.field_rate_hourly_value IS NOT NULL)
				AND (rate_content.field_rate_hourly_value > 0)
			ORDER BY firm_title ASC, position_weight ASC, hourly DESC, individual_title ASC";			
	$year = date('Y',strtotime('-1 year')); // Modify to show previous years
	$args = array_merge($list_data, array($year));
	$result = db_query($query, $args);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item;
	return $thisdata;
}

function valeo_get_compcircle_past_array($ID = false) {
	$list_data = valeo_get_compsearch_list_IDs($ID);
	$query = "
		SELECT rate_content.field_rate_individual_nid AS individual_nid, 
			rate_content.field_rate_hourly_value AS hourly
		FROM content_type_rate rate_content INNER JOIN node rate_node ON rate_content.vid = rate_node.vid
			 INNER JOIN node filing_node ON filing_node.nid = rate_content.field_rate_filing_nid
			 INNER JOIN content_type_filing filing_content ON filing_content.vid = filing_node.vid
		WHERE rate_node.status <> 0 AND rate_node.type in('rate')
			AND (rate_content.field_rate_position1_value IN('2111','2116','2115','2113','2114','2124','2126','2721','2133','2387','2792'))
			AND (rate_content.field_rate_firm_nid IN(".db_placeholders($list_data, 'int')."))
			AND (DATE_FORMAT(STR_TO_DATE(filing_content.field_case_feeappdates_value2,'%%Y-%%m-%%dT%%T'),'%%Y')= '%d')
			AND (rate_content.field_rate_hourly_value IS NOT NULL)
			AND (rate_content.field_rate_hourly_value > 0)
		ORDER BY hourly ASC";
	$year = date('Y',strtotime('-1 year')); // Modify to show previous years
	$args = array_merge($list_data, array($year));
	$result = db_query($query, $args);
	while ($item = db_fetch_array($result))
		$thisdata[$item['individual_nid']] = $item['hourly'];
	return $thisdata;
}

function valeo_get_compcircle_users_alerts_emails_array() {
	$query = "
		SELECT DISTINCT
			users.uid AS uid,
			node_data_field_profile_emailaddress.field_profile_emailaddress_email AS email
		FROM
			node node LEFT
		JOIN content_field_profile_compcircle node_data_field_profile_compcircle ON node.vid = node_data_field_profile_compcircle.vid LEFT
		JOIN content_type_profile node_data_field_profile_email ON node.vid = node_data_field_profile_email.vid
		AND node_data_field_profile_email.field_profile_email_value = 'off'
		INNER JOIN users users ON node.uid = users.uid
		INNER JOIN users_roles users_roles ON node.uid = users_roles.uid LEFT
		JOIN content_field_profile_emailaddress node_data_field_profile_emailaddress ON node.vid = node_data_field_profile_emailaddress.vid
		WHERE
			(node_data_field_profile_compcircle.field_profile_compcircle_nid IS NOT NULL)
			AND (node.STATUS <> 0)
			AND (node_data_field_profile_email.field_profile_email_value IS NULL)
			AND (users.STATUS <> 0)
			AND (users_roles.rid = 8)
			AND (node_data_field_profile_emailaddress.field_profile_emailaddress_email IS NOT NULL)
		ORDER BY
			uid ASC, email ASC";
	$result = db_query($query);
	while ($item = db_fetch_array($result))
		$thisdata[] = $item;
	return $thisdata;
}


/**
* Output Alert Table
*/
function valeo_alerts_output($data) {
	$special = false;
	$previousyear = date('Y',strtotime('-1 year'));
	$currentyear = date('Y',strtotime('-0 year'));
	setlocale(LC_MONETARY, 'en_US');
	$past = valeo_get_compcircle_past_array(); // retrieve the past year's data
	switch ($data) {
		case 'ytd' : // retrieve the ytd data
			$current = valeo_get_all_data_updated();
			$special = true;
			break;
		case 'new' : // retrieve the newest data
			$current = valeo_get_compcircle_current_new_array();
			break;
	}
	$lastIndividual = 0;
	$lastFirm = 0;
	$rowsDisplayed = false;
	$counter = 1;
	if (count($current)) {
		// out download
		global $user;
		if (in_array("Download Add-On", $user->roles)) {
			$content = '<div class="downloadlink">';
			switch ($data) {
				case 'ytd' :
					$content .= '<p><a href="http://' . $_SERVER['HTTP_HOST'] . '/node/62102" title="Download Rate Changes in Excel">Download Rate Changes in Excel <img src="http://' . $_SERVER['HTTP_HOST'] . '/images/icon_excel.png" alt="Excel Icon" height="16" width="16" /></a></br>';
					$content .= '<p><a href="http://' . $_SERVER['HTTP_HOST'] . '/node/62101" title="Download Rate Changes in CSV">Download Rate Changes in CSV <img src="http://' . $_SERVER['HTTP_HOST'] . '/images/icon_csv.png" alt="CSV Icon" height="16" width="16" /></a></p>';
					break;
				case 'new' :
					$content .= '<p><a href="http://' . $_SERVER['HTTP_HOST'] . '/node/62100" title="Download Rate Changes in Excel">Download Rate Changes in Excel <img src="http://' . $_SERVER['HTTP_HOST'] . '/images/icon_excel.png" alt="Excel Icon" height="16" width="16" /></a></br>';
					$content .= '<p><a href="http://' . $_SERVER['HTTP_HOST'] . '/node/62099" title="Download Rate Changes in CSV">Download Rate Changes in CSV <img src="http://' . $_SERVER['HTTP_HOST'] . '/images/icon_csv.png" alt="CSV Icon" height="16" width="16" /></a></p>';
					break;
			}
		}
		else {
			$content = '<div class="inactive narrow"><p>Download this Report in Excel <img src="/sites/all/modules/drupal-contrib/views_bonus/export/images/xls.png" alt="XLS" title="XLS" width="16" height="16"><br />Download this Report in CSV <img src="/images/icon_csv.png" alt="CSV" title="CSV" width="16" height="16"></p>';
		}
		$content .= '</div>';
		$content .= '<table class="views-table cols-50">';
		if ($special) {
			foreach ($current AS $newRate) {
				if (!empty($newRate['rate_' . $previousyear]) && !empty($newRate['rate_' . $currentyear])) {
					if ($newRate['rate_' . $previousyear] != $newRate['rate_' . $currentyear]) {
						if ($newRate['individual_nid'] != $lastIndividual) { // See if this individual is listed for 2 different rates
							if ($newRate['firm_nid'] != $lastFirm) { // See if this is a new Firm
								$content .= '<tr><td class="cell-firm" colspan="5">' . $newRate['firm_title'] . '</td></tr>';
								$content .= '<tr class="alert-row-header"><th>Individual</th><th>Position</th><th>Practice Areas</th><th>City</th><th>Grad Date</th><th>Rate ' . date('Y', strtotime('-1 year')) . '</th><th>Rate ' . date('Y', strtotime('-0 year')) . '</th><th>Percent Increase</th></tr>'; // Modify to show previous years
							}
							$content .= ($counter % 2 == 0) ? '<tr class="odd">' : '<tr class="even">';
							$content .= '<td class="cell-individual"><a href="/node/' . $newRate['individual_nid'] . '" title="See details for ' . $newRate['individual_title'] . '">' . $newRate['individual_title'] . '</a></td>';
							$content .= '<td class="cell-position">' . $newRate['position'] . '</td>';
							$content .= '<td class="cell-practicearea">';
							if ($newRate['practicearea1']) {
								$content .= $newRate['practicearea1'];
							}
							if ($newRate['practicearea2']) {
								$content .= ', ' . $newRate['practicearea2'];
							}
							if ($newRate['practicearea3']) {
								$content .= ', ' . $newRate['practicearea3'];
							}
							$content .= '</td>';
							$content .= '<td class="cell-city">' . $newRate['city'] . '</td>';
							$content .= '<td class="cell-graddate">' . $newRate['graddate'] . '</td>';
							if (!empty($newRate['rate_' . $previousyear])) {
								$oldhourlyrate = money_format('%n', $newRate['rate_' . $previousyear]);
							}
							else {
								$oldhourlyrate = 'NA';
							}
							$content .= '<td class="cell-rate-old">' . $oldhourlyrate . '</td>';

							if (!empty($newRate['rate_' . $currentyear])) {
								$newhourlyrate = money_format('%n', $newRate['rate_' . $currentyear]);
							}
							else {
								$newhourlyrate = 'NA';
							}
							$content .= '<td class="cell-rate-new">' . $newhourlyrate . '</td>';

							if (!empty($newRate['rate_' . $previousyear]) && !empty($newRate['rate_' . $currentyear])) {
								$calcpercent = ($newRate['rate_' . $currentyear] / $newRate['rate_' . $previousyear] - 1) * 100;
								$percent = number_format($calcpercent, 2) . '%';
							}
							else {
								$percent = 'NA';
							}

							$content .= '<td class="cell-percent">' . $percent . '</td>';
							$content .= '</tr>';
							$counter++;
							$lastFirm = $newRate['firm_nid']; // Set the last firm displayed
							$rowsDisplayed = TRUE;
						}
						$lastIndividual = $newRate['individual_nid']; // Set the last individual displayed
					}
				}
			}
			$content .= '</table>';
		}
		else {
			foreach ($current AS $newRate) {
				if ($past[$newRate['individual_nid']]) { // check if this individual had a rate last year
					if ($newRate['individual_nid'] != $lastIndividual) { // See if this individual is listed for 2 different rates
						if ($past[$newRate['individual_nid']] != $newRate['hourly']) { // check if the rate didn't change
							if ($newRate['firm_nid'] != $lastFirm) { // See if this is a new Firm
								$content .= '<tr><td class="cell-firm" colspan="5">' . $newRate['firm_title'] . '</td></tr>';
								$content .= '<tr class="alert-row-header"><th>Individual</th><th>Position</th><th>Practice Areas</th><th>City</th><th>Grad Date</th><th>Rate ' . date('Y', strtotime('-1 year')) . '</th><th>Rate ' . date('Y', strtotime('-0 year')) . '</th><th>Percent Increase</th></tr>'; // Modify to show previous years
							}
							$content .= ($counter % 2 == 0) ? '<tr class="odd">' : '<tr class="even">';
							$content .= '<td class="cell-individual"><a href="/node/' . $newRate['individual_nid'] . '" title="See details for ' . $newRate['individual_title'] . '">' . $newRate['individual_title'] . '</a></td>';
							$content .= '<td class="cell-position">' . $newRate['position'] . '</td>';
							$content .= '<td class="cell-practicearea">';
							if ($newRate['practicearea1']) {
								$content .= $newRate['practicearea1'];
							}
							if ($newRate['practicearea2']) {
								$content .= ', ' . $newRate['practicearea2'];
							}
							if ($newRate['practicearea3']) {
								$content .= ', ' . $newRate['practicearea3'];
							}
							$content .= '</td>';
							$content .= '<td class="cell-city">' . $newRate['city'] . '</td>';
							$content .= '<td class="cell-graddate">' . $newRate['graddate'] . '</td>';
							$content .= '<td class="cell-rate-old">' . money_format('%n', $past[$newRate['individual_nid']]) . '</td>';
							$content .= '<td class="cell-rate-new">' . money_format('%n', $newRate['hourly']) . '</td>';
							$percent = ($newRate['hourly'] / $past[$newRate['individual_nid']] - 1) * 100;
							$content .= '<td class="cell-percent">' . number_format($percent, 2) . '%</td>';
							$content .= '</tr>';
							$counter++;
							$lastFirm = $newRate['firm_nid']; // Set the last firm displayed
							$rowsDisplayed = TRUE;
						}
						$lastIndividual = $newRate['individual_nid']; // Set the last individual displayed
					}
				}
			}
			$content .= '</table>';
		}
	}
	if ($rowsDisplayed) {
		return $content;
	} else {
		return '<p><em>There are no rate changes in your Competitor Circle for this time period.</em></p>';
	}
}

/**
* Output Alert Email
*/
function valeo_alerts_output_email($data,$ID = false) {
	setlocale(LC_MONETARY, 'en_US');
	try {
		$past = $ID ? valeo_get_compcircle_past_array($ID) : valeo_get_compcircle_past_array(); // retrieve the past year's data
		switch ($data) {
			case 'ytd' : // retrieve the ytd data
				$current = $ID ? valeo_get_compcircle_current_array($ID) : valeo_get_compcircle_current_array();
				break;
			case 'new' : // retrieve the newest data
				$current = $ID ? valeo_get_compcircle_current_new_array($ID) : valeo_get_compcircle_current_new_array();
				break;
		}
		$lastIndividual = 0;
		$lastFirm = 0;
		$rowsDisplayed = false;
		$content = '<html><head><title>Valeo Price Alert for '.date('n/j/Y').'</title><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><style type="text/css">body,.backgroundTable{background-color:#FFFFCC;}#contentTable{border:0px none #000000;margin-top:10px;}.adminText{font-size:10px;color:#663300;line-height:200%;font-family:Verdana;text-decoration:none;}.headerBar{background-color:#FFFFFF;border-top:0px none #333333;border-bottom:0px none #FFFFFF;padding:0px;}.headerBarText{color:#333333;font-size:30px;font-family:Verdana;font-weight:normal;text-align:left;}.title{font-size:16px;font-weight:bold;font-family:Verdana;line-height:150%;}.subTitle{font-size:14px;font-weight:bold;color:#000000;font-style:normal;font-family:Verdana;}.defaultText{font-size:12px;color:#333333;line-height:150%;font-family:Verdana;background-color:#ffffff;padding:20px;border:0px none #FFFFFF;}.footerRow{background-color:#8396BE;border-top:0px none #FFFFFF;padding:20px;}.footerText{font-size:10px;color:#333333;line-height:100%;font-family:Verdana;}a,a:link,a:visited{color:#800000;text-decoration:underline;font-weight:normal;}.headerTop a{color:#663300;text-decoration:none;font-weight:normal;}.footerRow a{color:#800000;text-decoration:underline;font-weight:normal;}body,.backgroundTable{background-color:#3B5998;}a,a:link,a:visited{text-decoration:none;color:#0066CC;}tr.even,tr.odd{background-color:#eeeeee;padding:0.1em 0.6em;}tr.even td,tr.odd td{border:1px solid #cccccc;padding:0.3em 0.6em;}tr.even{background-color:#ffffff;}th{text-align:left;padding:0.1em 0.6em;}</style></head>';
		$content .= '<body leftmargin="0" marginwidth="0" topmargin="0" marginheight="0" offset="0" style="background-color: #3B5998;"><table width="100%" cellspacing="0" class="backgroundTable" style="background-color: #3B5998;"><tr><td valign="top" align="center"><table id="contentTable" cellspacing="0" cellpadding="0" width="600" style="border: 0px none #000000;margin-top: 10px;background-color:#ffffff;"><tr><td><table width="600" cellpadding="0" cellspacing="0"><tr><td class="headerBar" style="background-color: #FFFFFF;border-top: 0px none #333333;border-bottom: 0px none #FFFFFF;padding: 10px;"><div class="headerBarText" style="color: #333333;font-size: 30px;font-family: Verdana;font-weight: normal;text-align: left;"><div style="text-align: left;"><a href="http://reports.valeopartners.com" style="color: #0066CC;text-decoration: none;font-weight: normal;"><img src="http://reports.valeopartners.com/email/valeo_hurricane_logo_small.gif" alt="Valeo Partners" border="0" style="margin: 0; padding: 0;" width="199" height="88"></a></div></div></td></tr></table>';
		$content .= '<table width="600" cellpadding="20" cellspacing="0" class="bodyTable" style="background-color:#ffffff;"><tr><td valign="top" align="left" class="defaultText"><h1 class="primary-heading"><span class="title" style="color:#000000;font-size:16px;font-weight:bold;font-family:Verdana;line-height:150%;">Valeo Price Alert for '.date('n/j/Y').'</span></h1>';
		if (count($current)) {
			$content .= '<table cellspacing="0"><tbody>';
			foreach ($current AS $newRate) {
				if ($past[$newRate['individual_nid']]) { // check if this individual had a rate last year
					if ($newRate['individual_nid'] != $lastIndividual) { // See if this individual is listed for 2 different rates
						if ($past[$newRate['individual_nid']] != $newRate['hourly']) { // check if the rate didn't change
							if ($newRate['firm_nid'] != $lastFirm) { // See if this is a new Firm
								$content .= '<tr><td class="cell-firm" colspan="5"><span style="color:#000000;font-size:14px;font-weight:bold;line-height:200%;padding-top:20px;"><br>'.$newRate['firm_title'].'</span></td></tr>';
								$content .= '<tr class="alert-row-header"><th><em><span style="color:#000000;font-size:10px;font-weight:bold;">Individual</span></em></th><th><em><span style="color:#000000;font-size:10px;font-weight:bold;">Position</span></em></th><th><em><span style="color:#000000;font-size:10px;font-weight:bold;">Rate '.date('Y', strtotime('-1 year')).'</span></em></th><th><em><span style="color:#000000;font-size:10px;font-weight:bold;">Rate '.date('Y', strtotime('-0 year')).'</span></em></th><th><em><span style="color:#000000;font-size:10px;font-weight:bold;">Percent Increase</span></em></th></tr>'; // Modify to show previous years
							}
							$content .= ($counter % 2 == 0) ? '<tr class="odd" style="background-color:#eeeeee;padding:0.1em 0.6em;">' : '<tr class="even" style="background-color:#ffffff;padding:0.1em 0.6em;">';
							$content .= '<td style="border:1px solid #cccccc;padding:0.3em 0.6em;" class="cell-individual"><span style="font-size:12px;padding:0.3em 0.6em;"><a href="http://reports.valeopartners.com/node/'.$newRate['individual_nid'].'" title="See details for '.$newRate['individual_title'].'" style="color: #0066CC;text-decoration: none;font-weight: normal;">'.$newRate['individual_title'].'</a></span></td>';
							$content .= '<td style="border:1px solid #cccccc;padding:0.3em 0.6em;" class="cell-position"><span style="color:#000000;font-size:12px;padding:0.3em 0.6em;">'.$newRate['position'].'</span></td>';
							$content .= '<td style="border:1px solid #cccccc;padding:0.3em 0.6em;" class="cell-rate-old"><span style="color:#000000;font-size:12px;padding:0.3em 0.6em;">'.money_format('%n',$past[$newRate['individual_nid']]).'</span></td>';
							$content .= '<td style="border:1px solid #cccccc;padding:0.3em 0.6em;" class="cell-rate-new"><span style="color:#000000;font-size:12px;padding:0.3em 0.6em;">'.money_format('%n',$newRate['hourly']).'</span></td>';
							$percent = ($newRate['hourly'] / $past[$newRate['individual_nid']] - 1) * 100;
							$content .= '<td style="border:1px solid #cccccc;padding:0.3em 0.6em;" class="cell-percent"><span style="color:#000000;font-size:12px;padding:0.3em 0.6em;">'.number_format($percent,2).'%</span></td>';
							$content .= '</tr>';
							$counter++;
							$lastFirm = $newRate['firm_nid']; // Set the last firm displayed
							$rowsDisplayed = true;
						}
						$lastIndividual = $newRate['individual_nid']; // Set the last individual displayed
					}
				}
			}
			$content .= '</tbody></table>';
		}
		if (!$rowsDisplayed) {
			$content .= '<br><br><p>There are no new rates in your Competitor Circle&copy; this period.</p><br><br>';
		}
		$content .= '<br></td></tr><tr><td class="footerRow" align="left" valign="top" style="background-color: #8396BE;border-top: 0px none #FFFFFF;padding: 20px;"><div class="footerText" style="font-size: 10px;color: #333333;line-height: 100%;font-family: Verdana;">You are receiving this email because you are subscribed to Valeo Partners\' Pricing Alerts.<br>Email <a href="mailto:alerts@valeopartners.com">alerts@valeopartners.com</a> if you have any questions.<br><br><strong>Our mailing address is:</strong><br><div class="vcard"><span class="fn org">Valeo Partners</span><div class="adr"><div class="street-address">1220 L St NW Suite 100</div><span class="locality">Washington</span>, <span class="region">DC</span> <span class="postal-code">20005</span></div></div><br>Office: 202.722.1864<br><br><em>Copyright (C) '.date('Y').' <a href="http://www.valeopartners.com">Valeo Partners</a> All rights reserved.</em><br></div></td></tr></table></td></tr></table></td></tr></table></body></html>';
		return $content;
	} catch (Exception $e) {
		watchdog('Alert Processing', 'Failed processing on ' . $data . ', ' . $ID, NULL, WATCHDOG_NOTICE, NULL);
		return '';
	}
}


/**
 * Render a CSV file from the input.
 * @param array $header
 *   Array of items to be rendered as the CSV header.
 * @param array $rows
 *   Array of items to be rendered as the CSV content.
 * @param string $separator
 *   The data column separator string.
 * @param string $delimiter
 *   The field delimiter string.
 */
function alerts_download_csv($header, $rows, $range, $separator = ',', $delimiter = '"') {
	$timestamp = date("d-m-y"); // Create a timestamp for the filename.
	header("Content-type: text/csv");
	header('Content-Disposition: attachment; filename="Valeo-RateChanges-' . $range . '-' . $timestamp . '.csv"');
	array_walk_recursive($header, '_clean_quotes');
	array_walk_recursive($rows, '_clean_quotes');
	$output = $delimiter . implode('"'. $separator .'"', $header) . $delimiter ."\n"; // header
	foreach ($rows as $row) { // loop through all rows
		$output .= $delimiter . implode('"'. $separator .'"', $row) . $delimiter . "\n"; // create CSV of rows
	}
	print $output;
	exit;
}


/**
 * Render an XLS file from the input.
 * @param array $header
 *   Array of items to be rendered as the header of the XLS table.
 * @param array $rows
 *   Array of items to be rendered as the XLS content.
 */
function alerts_download_xls($header, $rows, $range) {
	$timestamp = date("d-m-y"); // Create a timestamp for the filename.
	$filename = 'Valeo-RateChanges-'. $range . '-' .$timestamp .'.xls';
	header('Content-type: application/vnd.ms-excel');
	header('Content-Disposition: attachment; filename="'. $filename .'"');
	$output = '<html>';
	$output .= '<head><meta http-equiv=Content-Type content="text/html; charset=utf-8"></head>';
	$output .= '<body>';
	$output .= theme('table', $header, $rows);
	$output .= "</body></html>";
	print $output;
	exit;
}


/**
 * Central interpreter for the query and arguments.
 */
function alerts_download_render($type, $range, $ID = false) {
	setlocale(LC_MONETARY, 'en_US');
	$special = false;
	$previousyear = date('Y',strtotime('-1 year'));
	$currentyear = date('Y',strtotime('-0 year'));
	$past = $ID ? valeo_get_compcircle_past_array($ID) : valeo_get_compcircle_past_array(); // retrieve the past year's data
	switch ($range) {
		case 'ytd' : // retrieve the ytd data
			//$current = $ID ? valeo_get_compcircle_current_array($ID) : valeo_get_compcircle_current_array();
			$current = $ID ? valeo_get_all_data_updated($ID) : valeo_get_all_data_updated();
			$special = true;

			break;
		case 'new' : // retrieve the newest data
			$current = $ID ? valeo_get_compcircle_current_new_array($ID) : valeo_get_compcircle_current_new_array();
			break;
	}
	$lastIndividual = 0;
	$lastFirm = 0;
	$rowsDisplayed = false;
	$header = array('Firm','Individual','Position','Practice Area 1','Practice Area 2','Practice Area 3','City','Grad Date','Former Rate','New Rate','Percent Change');
	$outputArray = '';
	if ($special){
		if (count($current)) {
			foreach ($current AS $newRate) {
				if (!empty($newRate['rate_' . $previousyear]) && !empty($newRate['rate_' . $currentyear])) {
					if ($newRate['rate_' . $previousyear] != $newRate['rate_' . $currentyear]) {
						$percent = '';
						$newhourlyrate = '';
						$oldhourlyrate = '';
						if ($newRate['individual_nid'] != $lastIndividual) { // See if this individual is listed for 2 different rates
							if (!empty($newRate['rate_' . $previousyear]) && !empty($newRate['rate_' . $currentyear])) {
								$calcpercent = ($newRate['rate_' . $currentyear] / $newRate['rate_' . $previousyear] - 1) * 100;
								$percent = number_format($calcpercent, 2) . '%';
							}
							else {
								$percent = 'NA';
							}

							if (!empty($newRate['rate_' . $previousyear])) {
								$oldhourlyrate = money_format('%n', $newRate['rate_' . $previousyear]);
							}
							else {
								$oldhourlyrate = 'NA';
							}

							if (!empty($newRate['rate_' . $currentyear])) {
								$newhourlyrate = money_format('%n', $newRate['rate_' . $currentyear]);
							}
							else {
								$newhourlyrate = 'NA';
							}

							$outputArray[] = array(
								'Firm' => $newRate['firm_title'],
								'Individual' => $newRate['individual_title'],
								'Position' => $newRate['position'],
								'Practice Area 1' => $newRate['practicearea1'],
								'Practice Area 2' => $newRate['practicearea2'],
								'Practice Area 3' => $newRate['practicearea3'],
								'City' => $newRate['city'],
								'Grad Date' => $newRate['graddate'],
								'Former Rate' => $oldhourlyrate,
								'New Rate' => $newhourlyrate,
								'Percent Change' => $percent,
							);
							$lastFirm = $newRate['firm_nid']; // Set the last firm displayed
							$rowsDisplayed = TRUE;
							$lastIndividual = $newRate['individual_nid']; // Set the last individual displayed
						}
					}
				}
			}
		}
	}else{
		if (count($current)) {
			foreach ($current AS $newRate) {
				if ($past[$newRate['individual_nid']]) { // check if this individual had a rate last year
					if ($newRate['individual_nid'] != $lastIndividual) { // See if this individual is listed for 2 different rates
						if ($past[$newRate['individual_nid']] != $newRate['hourly']) { // check if the rate didn't change
							$percent = ($newRate['hourly'] / $past[$newRate['individual_nid']] - 1) * 100;
							$outputArray[] = array(
								'Firm' => $newRate['firm_title'],
								'Individual' => $newRate['individual_title'],
								'Position' => $newRate['position'],
								'Practice Area 1' => $newRate['practicearea1'],
								'Practice Area 2' => $newRate['practicearea2'],
								'Practice Area 3' => $newRate['practicearea3'],
								'City' => $newRate['city'],
								'Grad Date' => $newRate['graddate'],
								'Former Rate' => money_format('%n',$past[$newRate['individual_nid']]),
								'New Rate' => money_format('%n',$newRate['hourly']),
								'Percent Change' => $percent . '%',
							);
							$lastFirm = $newRate['firm_nid']; // Set the last firm displayed
							$rowsDisplayed = true;
						}
						$lastIndividual = $newRate['individual_nid']; // Set the last individual displayed
					}
				}
			}
		}
	}
	if (count($outputArray)) {
		$function = 'alerts_download_'. $type;
		if (function_exists($function)) {
		  return call_user_func($function, $header, $outputArray, $range);
		}
	}
	return '';
}



/**
* Theme the custom blocks
*/
function block_valeo_alerts($data) {
	return valeo_alerts_output($data);
}


/**
 * Implementation of hook_block().
 */
function valeomod_block($op = 'list', $delta = 0, $edit=array()) {
	switch ($op) {
		case 'list': //no switching for delta. always false
  			$blocks['valeo-alerts-ytd'] = array(
				'info' => t('Rate Changes - YTD'),
				'cache' => BLOCK_CACHE_PER_ROLE,
				'status'     => TRUE,
				'weight'     => 0,
				'visibility' => 1,
				'region'	 => 'content_bottom',
			);
  			$blocks['valeo-alerts-new'] = array(
				'info' => t('Rate Changes - Newly Added'),
				'cache' => BLOCK_CACHE_PER_ROLE,
				'status'     => TRUE,
				'weight'     => 0,
				'visibility' => 1,
				'region'	 => 'content_bottom',
			);
			return $blocks;
		case 'view': // switch by delta here to decide what the output should be.
			switch ($delta) {
        		case 'valeo-alerts-ytd':
					$block['subject'] = t('Rate Changes Between ' . date('Y', strtotime('-1 year')) .' and ' .  date('Y', strtotime('-0 year')) . ':'); // Modify to show previous years
					$block['content'] = block_valeo_alerts('ytd');
					break;
        		case 'valeo-alerts-new':
					$block['subject'] = t('Rate Changes Added in Past Two Weeks Between ' . date('Y', strtotime('-1 year')) .' and ' .  date('Y', strtotime('-0 year')) . ':'); // Modify to show previous years
					$block['content'] = block_valeo_alerts('new');
					break;
			}
			return $block;
	}
}


/**
 * Code for sending alert emails
 */
function send_alerts() {
	// Check if the alert is already running.
	$alerts_running = variable_get('valeomod_alertsrunning', 0);
	if (!$alerts_running) {
		// turn on processing indicator
		variable_set('valeomod_alertsrunning', 1);
		// Add Postmark class
		require_once 'postmark/Postmark.php';
		$emaillist = valeo_get_compcircle_users_alerts_emails_array();
		$lastID = 0;
		$title = 'Valeo Price Alert for '.date('n/j/Y');
		foreach ($emaillist AS $email) {
			$thisemail = trim($email['email']);
			if ($lastID != $email['uid']) {
				$message = valeo_alerts_output_email('new',$email['uid']); // Only run the queries if this is a new user, not a different address for the same user.
			}
			if ($message) {
				try {
					Mail_Postmark::compose()
						->to($thisemail)
						->subject($title)
						->messageHtml($message)
						->send();
				} catch (Exception $e) {
					watchdog('Alert Emails', 'Failed sending to ' . $thisemail . ' at ID ' . $email['uid'], NULL, WATCHDOG_NOTICE, NULL);
				}
			}
			$lastID = $email['uid'];
		}
		// turn off processing indicator
		variable_set('valeomod_alertsrunning', 0);
	}
}


/**
 * Override view output to join the search for all Practice Areas to one variable
 */
function valeomod_views_pre_build(&$view) {
	switch ($view->name) {
		case 'fees_by_firm':
		case 'rates_fees_by_firm':
		case 'fees_by_company':
		case 'rates_by_reportbuilder':
		case 'stats_ms3y':
			$display_id = array('default','page_1');
			if (in_array($view->current_display, $display_id)) {
				$practice_area2 = $view->get_item($view->current_display, 'filter', 'field_individual_pa2_value');
				if (isset($practice_area2)) {
					$practice_area2['expose']['identifier'] = 'practice_area';
					$view->set_item($view->current_display, 'filter', 'field_individual_pa2_value', $practice_area2);
				}
				$practice_area3 = $view->get_item($view->current_display, 'filter', 'field_individual_pa3_value');
				if (isset($practice_area3)) {
					$practice_area3['expose']['identifier'] = 'practice_area';
					$view->set_item($view->current_display, 'filter', 'field_individual_pa3_value', $practice_area3);
				}
				$view->is_cacheable = FALSE;
			}
			break;
	}
}


/**
 * Remove the display of the extra Practice Area dropdown filters
 */
function valeomod_form_views_exposed_form_alter(&$form, &$form_state) {
	switch ($form_state['view']->name) {
		case 'fees_by_firm':
		case 'rates_fees_by_firm':
		case 'fees_by_company':
		case 'rates_by_reportbuilder':
		case 'stats_ms3y':
			$display_id = array('default','page_1');
			if (in_array($form_state['view']->current_display, $display_id)) {
				if (isset($form['#info']['filter-field_individual_pa2_value'])) {
					unset($form['#info']['filter-field_individual_pa2_value']);
				}
				if (isset($form['#info']['filter-field_individual_pa3_value'])) {
					unset($form['#info']['filter-field_individual_pa3_value']);
				}
			}
			break;
	}
}

/**
 * Format calculated field output
 */
function valeomod_views_pre_render(&$view) {
	if((strstr($view->name,'fees_by_firm')) || 
		(strstr($view->name,'rates_fees_by_firm')) || 
		(strstr($view->name,'fees_by_company')) || 
		(strstr($view->name,'fees_by_individual')) ||
		(strstr($view->name,'rate_manage'))
		) {
		setlocale(LC_MONETARY, 'en_US');
		foreach($view->result as $index) {
			foreach($index as $key => $data) {
				if (strstr($key,'primaryfee_calc')) {
					if ($data == '0.00') {
						$index->$key = '';
					} else {
						$index->$key = money_format('%n',$data);
					}
				}
			}
		}
	}
}